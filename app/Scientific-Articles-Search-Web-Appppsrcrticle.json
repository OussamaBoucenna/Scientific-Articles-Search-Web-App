{
  "title": "Efficient Vertical Mining of High Average-Utility Itemsets",
  "authors": [
    "Tin Truong",
    "Hai Duong",
    "Bac Le",
    "Philippe Fournier-Viger"
  ],
  "Institution": "{\n  \"authors\": [\n    {\n      \"name\": \"Tin Truong\",\n      \"institution\": \"Unknown\"\n    },\n    {\n      \"name\": \"Hai Duong\",\n      \"institution\": \"Unknown\"\n    },\n    {\n      \"name\": \"Bac Le\",\n      \"institution\": \"Unknown\"\n    },\n    {\n      \"name\": \"Philippe Fournier-Viger\",\n      \"institution\": \"Unknown\"\n    }\n  ]\n}",
  "Abstract": "Abstract\u2014Mining High Average-Utility Itemsets (HAUIs) in a quantitative database is an extension of the traditional problem of  frequent itemset mining, having several practical applications. Discovering HAUIs is more challenging than mining frequent  itemsets using the traditional support model since the average-utilities of itemsets do not satisfy the downward-closure property.  To design algorithms for mining HAUIs that reduce the search space of itemsets, prior studies have proposed various upper- bounds on the average-utilities of itemsets. However, these algorithms can generate a huge amount of unpromising HAUI  candidates, which result in high memory consumption and long runtimes. To address this problem, this paper proposes four tight  average-utility upper-bounds, based on a vertical database representation, and three efficient pruning strategies. Furthermore, a  novel generic framework for comparing average-utility upper-bounds is presented. Based on these theoretical results, an efficient  algorithm named dHAUIM is introduced for mining the complete set of HAUIs. dHAUIM represents the search space and quickly  compute upper-bounds using a novel IDUL structure. Extensive experiments show that dHAUIM outperforms three state-of-the- art algorithms for mining HAUIs in terms of runtime on both real-life and synthetic databases. Moreover, results show that the  proposed pruning strategies dramatically reduce the number of candidate HAUIs.  ",
  "Keywords": "Index Terms\u2014Pattern mining, utility mining, high average-utility itemset, upper-bound, diffset   \u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014   \uf075   \u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014  1 ",
  "Reference": "REFERENCES \n \n[1]  R. Agrawal, T. Imielinksi and A. Swami, \"Mining \nAssociation Rules between Sets of Items in Large Database,\" \nin The ACM SIGMOD International Conference on Management \nof Data, 1993.  \n[2]  V. Torres, K. Chiu and M. Vasudeva, \"WFIM: weighted \nfrequent itemset mining with a weight range and a \nminimum weight,\" in The 2005 SIAM International Conference \non Data Mining, 2005.  \n[3]  U. Yun, \"Efficient mining of weighted interesting patterns \nwith a strong weight and/or support afinity,\" International \njournal of Information Sciences, vol. 177, no. 17, pp. 3477-3499, \n2007.  \n[4]  G. Lan, T. Hong, H. Lee, S. Wang and C. Tsai, \"Enhancing \nthe Efficiency in mining Weighted Frequent Itemsets,\" in \nIEEE International Conference on Systems, 2013.  \n[5]  C. Cai, A. Fu, C. Cheng and W. Kwong, \"Mining Association \nRules with Weighted Items,\" in The International Database \nEngineering and Applications Symposium, 1998.  \n[6]  Y. Liu, W. Liao and A. Choudhary, \"A fast high utility \nitemsets mining algorithm,\" in The Utility-Based Data Mining \nWorkshop, 2005.  \n[7]  G. Lan, T. Hong and V. Tseng, \"An efficient projection-based \nindexing approach for mining high utility itemsets,\" J. Knowl. \nInform. Syst., vol. 38, no. 1, pp. 85-107, 2013.  \n[8]  M. Liu and J. Qu, \"Mining high utility itemsets without \ncandidate generation,\" in ACM International Conference on \nInformation and Knowledge Management, 2012.  \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \nFig. 8. Comparison of runtime and number of join operations w.r.t. \ndatabase parameters. \n0\n1\n2\n3\n4\n5\n16\n17\n18\n19\n20\nRuntime (s)\nx 103\nT (mu = 1%)\nT*I9N50D100K\n1.E+0\n1.E+2\n1.E+4\n1.E+6\n16\n17\n18\n19\n20\n# of join operation\nT (mu = 1%)\nT*I9N50D100K\n0\n2\n4\n6\n60\n70\n80\n90\n100\nRuntime (s)\nx 102\nN (mu = 0.8%)\nT16I9N*D100K\n0\n1\n2\n3\n60\n70\n80\n90\n100\n# of join operation\nx 105\nN (mu = 0.8%)\nT16I9N*D100K\n0\n5\n10\n15\n20\n105\n110\n115\n120\n125\nRuntime (s)\nx 102\nD (mu = 0.8%)\nT16I9N60D*K\n0\n20\n40\n60\n105\n110\n115\n120\n125\n# of join operation\nx 104\nD (mu = 0.8%)\nT16I9N60D*K\n1041-4347 (c) 2018 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more\ninformation.\nThis article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI\n10.1109/TKDE.2018.2833478, IEEE Transactions on Knowledge and Data Engineering\n14 \nIEEE TRANSACTIONS ON KNOWLEDGE AND DATA ENGINEERING,  MANUSCRIPT ID \n \n[9]  H. Yao, H. Hamilton and C. Butz, \"A foundational approach \nto mining itemset utilities from databases,\" in The 2004 SIAM \nInternational Conference on Data Mining, 2004.  \n[10]  C. Ahmed, S. Tanbeer, B. Jeong and Y. Lee, \"Efficient tree \nstructures for high utility pattern mining in incremental \ndatabases,\" J. IEEE Trans. Knowl. Data Eng, vol. 21, pp. 1708-\n1721, 2009.  \n[11]  R. Chan, Q. Yang and Y. Shen, \"Minging high utility \nitemsets,\" in IEEE International Conference on Data Mining, \n2003.  \n[12]  T. Hong, C. Lee and S. Wang, \"Mining High Average-Utility \nItemsets,\" in The 2009 IEEE International Conference on \nSystems, Man, and Cybernetics, 2009.  \n[13]  J.-W. Lin, T. Hong and W. Lu, \"Efficiently mining high \naverage utility itemsets with a tree structure,\" in Lect. Notes \nComput. Sci. 5990, 2010.  \n[14]  T. Hong, C. Lee and S. Wang, \"Effective utility mining with \nthe measure of average utility,\" The international journal of \nExpert Systems with Applications, vol. 38, no. 7, pp. 8259-8265, \n2011.  \n[15]  T. Lu, B. Vo, H. Nguyen and T. Hong, \"A new method for \nmining high average utility itemsets,\" in Lect. Notes Comput. \nSci. 8838, 2014.  \n[16]  G. Lan, T. Hong and V. Tseng, \"Efficiently mining high \naverage-utility itemsets with an improved upper-bound \nstrategy,\" International Journal of Information Technology & \nDecision Making, vol. 11, no. 5, pp. 1009-1030, 2012.  \n[17]  J.-W. Lin, T. Li, P. Fournier-Viger, T. Hong and J. Zhan, \"An \nefficient algorithm to mine high average-utility itemsets,\" \nInternational journal of Advanced Engineering Informatics, vol. \n30, no. 2, pp. 233-243, April 2016.  \n[18]  J.-W. Lin, S. Ren, P. Fournier-Viger and T. Hong, \"EHAUPM: \nEfficient High Average-Utility Pattern Mining with Tighter \nUpper-Bound Models,\" J. IEEE ACCESS, vol. 5, pp. 12927 - \n12940, 2017a.  \n[19]  J.-W. Lin, S. Ren, P. Fournier-Viger, T.-P. Hong, J. Su and B. \nVo, \"A fast algorithm for mining high average-utility \nitemsets,\" Applied Intelligence, vol. 47, no. 2, pp. 331-346, \n2017b.  \n[20]  U. Yun and D. Kim, \"Mining of high average-utility itemsets \nusing novel list structure and pruning strategy,\" Future \nGeneration Computer Systems, pp. 346-360, 2016.  \n[21]  M. Zaki and K. Gouda, \"Fast vertical mining using diffsets,\" \nin The 9th ACM SIGKDD international conference on Knowledge \ndiscovery and data mining, 2003.  \n[22]  P. Fournier-Viger, A. Gomariz, T. Gueniche, A. Soltani and \nC. Wu, \"SPMF: a Java Open-Source Pattern Mining Library,\" \nJ. Machine Learning Research, vol. 15, no. 1, pp. 3389-3393, \n2014.  \n \nTin Truong is a professor at the Department of Math-\nematics and Computer Science, University of Dalat, \nVietnam. He received his B.S. degree in Mathematics \nfrom Dalat University in 1983 and his Ph.D. in Sto-\nchastic Optimal Control in 1990 at the Vietnam Na-\ntional University, VNU-Hanoi, Vietnam. His current \nresearch interests are artificial intelligence and data \nmining. \nHai Duong is a Ph.D. student of Computer Science \nat the University of Science\u2014VNU-HCMC, Vi-\netnam. His research interest is data mining. He re-\nceived his M.S. degree in Computer Science in \n2009 at the University of Science\u2014VNU-HCMC, Vi-\netnam, and he is currently a lecturer and a re-\nsearcher at the Department of Mathematics and \nComputer Science, University of Dalat, Vietnam. \nBac Le received his B.S. degree in Mathematics in \n1984 and the M.S. degree in Computer Sciences in \n1990. He received his Ph.D. in Mathematics for \nComputers and Computing Systems in 2000 at the \nUniversity of Science\u2014VNU-HCMC, Vietnam. He is \ncurrently the Head of Department of Computer Sci-\nence as well as the Vice Dean, Faculty of Infor-\nmation Technology. His current research interests include artificial in-\ntelligence, soft computing, data mining and data science. \nPhilippe Fournier-Viger is a full professor at the \nSchool of Natural Sciences and Humanities, Harbin \nInstitute of Technology (Shenzhen), China, and ad-\njunct professor at the Department of Computer Sci-\nence, University of Moncton, Canada. He received \nthe Ph.D. in Computer Science, at the University of \nQuebec in Montreal, Canada in 2010. He is the founder of the popular \nSPMF data mining library. His research interests include data mining, \npattern mining, sequence mining, sequence prediction, cognitive \nmodeling and real-life applications in industrial design. \n \n \n",
  "Text_integral": "INTRODUCTION\nHE problem of mining frequent itemsets and associa-\ntion rules in transaction databases [1] is a fundamental \nresearch problem in the field of knowledge discovery in \ndatabases, which consists of discovering frequently pur-\nchased itemsets (sets of items) in customer transactions. To \nefficiently solve this problem for binary transaction data-\nbases, algorithms have been developed based on the \ndownward closure property (DCP) of the support measure \nfor itemsets. This property indicates that, if an itemset is \ninfrequent, all its super itemsets are also infrequent, and \ncan thus be pruned to reduce the search space. A popular \nextension of frequent itemset mining is weighted itemset \nmining, where weights are assigned to items to indicate \ntheir relative importance. The goal is to discover itemsets \nhaving weights that are no less than a user-defined thresh-\nold [2], [3], [4]. Although these prior studies have several \napplications, real-life transactional databases usually not \nonly contain weights (e.g. unit profits of items) but also in-\nformation about the quantities of items in transactions (e.g. \npurchase quantities). But items having high selling fre-\nquencies (support) are often not the most important to the \nuser. For example, many items may have high selling fre-\nquencies but may yield a low profit, while less frequent \nitems may yield a higher profit. Thus, only considering the \nfrequencies or weights of itemsets is insufficient to identify \nitemsets of interest to users. \nFacing these limitations of traditional and weighted fre-\nquent itemset mining, the problem of high utility itemset \nmining (HUIM) has emerged as an important research \nproblem [5], [6], [7], [8], [9]. The goal is to extract itemsets \nthat have a high utility (yield a high profit), where the util-\nity of an itemset is defined as the sum of the utilities of its \nitems in transactions where the itemset appears. An item-\nset is of high utility (HU) if its utility is larger than or equal \nto a minimum utility threshold \ud835\udc5a\ud835\udc62, defined by the user. \nThe key challenge for designing efficient HUIM algorithms \nis that the DCP does not hold for the utility measure. To \naddress this issue, an upper bound (UB) on the utility of \nitemsets that respect the DCP was proposed [6], named \ntransaction-weighted utilization (TWU). The DCP prop-\nerty of the TWU upper-bound states that supersets of an \nitemset having a TWU value that is less than the \ud835\udc5a\ud835\udc62 \nthreshold also have low TWU values, and are low utility \nitemsets. The TWU upper-bound has been used in numer-\nous HUIM algorithms to prune unpromising itemsets and \nthus reduce the search space [10], [11]. \nAlthough high utility itemset mining is useful, the stand-\nard utility measure does not take the length of itemsets into \naccount. But in real-life, an itemset containing many items \nis often uninteresting as it is difficult to co-promote a large \nset of products. Besides, itemsets containing several items \noften have a higher utility than those containing fewer \nitems, which may be seen as unfair. For instance, many \nhigh utility items such as laptop produce high utility item-\nsets when they are combined with items having a lower \nutility such as USB drives or mouse pads. This can result \nxxxx-xxxx/0x/$xx.00 \u00a9 200x IEEE        Published by the IEEE Computer Society \n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014 \n\uf0b7 T. Truong is with the Department of Mathematics and Computer Science, \nUniversity of Dalat, 1 Phu Dong Thien Vuong Street, Dalat city, Vietnam. \nE-mail: tintc@dlu.edu.vn. \n\uf0b7 H. Duong is with the Department of Mathematics and Computer Science, \nUniversity of Dalat, 1 Phu Dong Thien Vuong Street, Dalat city, Vietnam. \nE-mail: haidv@dlu.edu.vn. \n\uf0b7 B. Le is with the VNU \u2013 HCMC, University of Natural Sciences, 227 Ngu-\nyen Van Cu Street, District 5, Ho Chi Minh city, Vietnam. E-mail: \nlhbac@fit.hcmus.edu.vn.  \n\uf0b7 P. Fournier-Viger is with the School of Humanities and Social Sciences, \nHarbin Institute of Technology (Shenzhen), HIT Campus, Pingshan Rd, \nUniversity Town, Xili, Shenzhen, China. E-mail: philfv8@yahoo.com. \n \nT \n1041-4347 (c) 2018 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more\ninformation.\nThis article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI\n10.1109/TKDE.2018.2833478, IEEE Transactions on Knowledge and Data Engineering\n2 \nIEEE TRANSACTIONS ON KNOWLEDGE AND DATA ENGINEERING,  MANUSCRIPT ID \n \nin a huge number of high utility patterns containing infor-\nmation that is not useful for decision-making. To more \nfairly measure the utility of itemsets, Hong et al. have pro-\nposed the average utility measure [12], [13], which adds a \npenalty that is proportional to the length of an itemset to \nthe utility measure. The average-utility of an itemset is the \nsum of the utilities of its items in transactions where it ap-\npears, divided by its length. Although, high average-utility \nitemset mining (HAUIM) is a well-studied research prob-\nlem, extracting HAUIs remains time-consuming. Thus, \nproposing techniques to improve the efficiency of HAUIM \nis important.  \nThe key challenge for designing efficient HAUIM algo-\nrithms is that the DCP does not hold for the average-utility \n(AU) of itemsets (similarly to HUIM). To deal with this is-\nsue, researchers have proposed an average-utility upper-\nbound (UB) on the average-utilities of itemsets named \n\ud835\udc4e\ud835\udc62\ud835\udc62\ud835\udc4f [14], [15], which restores the DCP. Then, to further \nreduce the search space, an improved upper-bound has \nbeen designed and integrated in a projection based two-\nphase algorithm [16]. In the first phase, a set of candidate \nhigh utility itemsets is found using the improved upper-\nbound. In the second phase, the average utilities of candi-\ndates are calculated to filter low average-utility itemsets \nand obtain the set of HAUIs. However, repeatedly scan-\nning projected databases and updating UBs are time-con-\nsuming. To more efficiently mine HAUIs, an AU-list struc-\nture and a corresponding pruning strategy were proposed \nin the HAUI-Miner algorithm [17]. Recently, Lin et al. [18], \n[19] and Yun et al. [20] proposed additional alternative UBs \nto enhance the performance of HAUIM. Despite these ad-\nvances, UBs used by current state-of-the-art HAUIM algo-\nrithms remains loose. Thus, algorithms cannot reduce the \nsearch space effectively, consider a large amount of un-\npromising candidate itemsets, and as a result can have long \nruntimes. Moreover, although many UBs have been pro-\nposed, no generic theoretical model has yet been designed \nto compare their ability at pruning unpromising candidates. \nBased on these observations, three important research ques-\ntions are raised:  \n(\ud835\udc78\ud835\udfcf) Can we propose better UBs?  \n(\ud835\udc78\ud835\udfd0) Can we design a generic framework to evaluate and \ncompare the ability at reducing the search space of UBs? Can \nthis framework help draw insights on how to design suita-\nble pruning strategies for new UBs? \n(\ud835\udc78\ud835\udfd1) Can we design a suitable structure to maintain aux-\niliary utility information, a fast UB calculation method and \nan efficient algorithm to decrease the runtime of HAUIM? \nThis study answers these questions positively. It pro-\nposes novel tighter UBs, a generic framework to evaluate \nUBs, efficient pruning strategies based on these UBs, and a \nnovel algorithm to efficiently mine HAUIs. \nContributions. The major contributions of this paper \nare summarized as follows. First, we propose four novel \ntighter UBs named \ud835\udc4e\ud835\udc62\ud835\udc4f1, \ud835\udc4e\ud835\udc62\ud835\udc4f, \ud835\udc56\ud835\udc4e\ud835\udc62\ud835\udc4f and \ud835\udc59\ud835\udc4e\ud835\udc62\ud835\udc4f based on a \nnovel vertical representation of UBs (answering \ud835\udc441). Sec-\nond, a generic framework for evaluating the pruning ability \nof UBs based on anti-monotone-like criteria is proposed. \nBased on these UBs, three pruning strategies are proposed to \neliminate unpromising candidates early, which dramati-\ncally reduce the search space (answering \ud835\udc442). Third, to de-\ncrease the execution time, the diffset technique [21] is \nadapted for HAUIM. This allows to quickly compute aux-\niliary information about the average-utility of itemsets and \nthe proposed UBs. Moreover, a novel structure named the \nIDUL prefix tree is used to maintain HAUI candidates and \na novel algorithm named dHAUIM is designed for effi-\nciently mining the complete set of HAUIs (answering \ud835\udc443). \nFinally, we show empirical evidence that dHAUIM out-\nperforms the state-of-the-art algorithms in terms of \nruntime and number of joins on both real-life and synthetic \ndatabases. \nThe rest of this paper is organized as follows. Section 2 \nintroduces preliminary concepts and notations related to \nhigh utility itemset mining, and defines the problem of \nHAUIM. Section 3 presents theoretical results including \nfour novel UBs, a generic framework for evaluating UBs \nand three efficient techniques to prune unpromising can-\ndidates early. Section 4 proposes an efficient algorithm \nnamed dHAUIM for mining HAUIs. Section 5 presents the \nexperimental evaluation. Finally, Section 6 draws a conclu-\nsion and discusses future work. \n2 PRELIMINARY CONCEPTS AND PROBLEM STATEMENT \nThis section introduces fundamental concepts and notations \nrelated to high average-utility itemset mining. They are nec-\nessary for explaining the theoretical results proposed in the \nnext sections. \n2.1 Preliminary concepts \nLet \ud835\udc9c \u225d {\ud835\udc4e\ud835\udc57, \ud835\udc57 \uf0ce \ud835\udc3d \u225d {1, 2, \u2026 , \ud835\udc40}} be a finite set of distinct \nitems (e.g. products sold in a retail store). An itemset \ud835\udc34 is a \nsubset of \ud835\udc9c and is called k-itemset if it contains \ud835\udc58 items, i.e. \n\ud835\udc58 = |\ud835\udc34|. Without loss of generality, we can assume that all \nitems in each itemset are sorted in ascending order with \nrespect to the lexicographical order relation \u227a. Moreover, \neach item \ud835\udc4e  is associated with a positive number \ud835\udc5d(\ud835\udc4e) \ncalled its unit profit (or external utility), which represents \nits relative importance to the user in terms of criteria such \nas unit profit, price, weight or importance. The profit vec-\ntor \ud835\udcab \u225d (\ud835\udc5d(\ud835\udc4e\ud835\udc57), \ud835\udc57 \uf0ce \ud835\udc3d) consists of the unit profits of all items \nin \ud835\udc9c. A q-item is a pair (\ud835\udc4e, \ud835\udc5e), where \ud835\udc4e \uf0ce \ud835\udc9c and \ud835\udc5e is a non-\nnegative number indicating the purchase quantity (or in-\nternal utility) of the item \ud835\udc4e. A transaction or q-itemset \ud835\udc61\ud835\udc56 is a \nset of q-items, \ud835\udc61\ud835\udc56 \u225d {(\ud835\udc4e\ud835\udc57, \ud835\udc5e\ud835\udc56\ud835\udc57), \ud835\udc57 \uf0ce \ud835\udc3d\ud835\udc56}, where \ud835\udc3d\ud835\udc56 \u2286 \ud835\udc3d is an in-\ndex subset of \ud835\udc3d. A quantitative database (QDB) \ud835\udc9f is a finite \nset of transactions, \ud835\udc9f \u225d {\ud835\udc61\ud835\udc56, \ud835\udc56 \uf0ce \ud835\udc3c \u225d {1, 2, \u2026 , \ud835\udc41}} , where \neach transaction \ud835\udc61\ud835\udc56 is associated with a unique identifier \n\ud835\udc47\ud835\udc3c\ud835\udc37 (e.g. \ud835\udc47\ud835\udc3c\ud835\udc37 =  \ud835\udc56). The utility of a q-item (\ud835\udc4e, \ud835\udc5e) is denoted \nand defined as \ud835\udc62((\ud835\udc4e, \ud835\udc5e)) \u225d \ud835\udc5e \u2217 \ud835\udc5d(\ud835\udc4e). Intuitively, it repre-\nsents the amount of profit yield by the sale of item a in the \ntransaction where the q-item (\ud835\udc4e, \ud835\udc5e) appears. \nWhen mining a quantitative database to find high util-\nity patterns, to avoid repeatedly computing the utility  \n\ud835\udc62((\ud835\udc4e\ud835\udc57, \ud835\udc5e\ud835\udc56\ud835\udc57)) = \ud835\udc5e\ud835\udc56\ud835\udc57 \u2217 \ud835\udc5d(\ud835\udc4e\ud835\udc57) of a q-item (\ud835\udc4e\ud835\udc57, \ud835\udc5e\ud835\udc56\ud835\udc57) in a transaction \n\ud835\udc61\ud835\udc56, the utility of each q-item can be calculated once and \nstored in the corresponding transaction. The transformed \ndatabase resulting from applying this process to a quanti-\ntative database QDB \ud835\udc9f\u2019 \u225d {\ud835\udc61\u2032\ud835\udc56 \u225d {(\ud835\udc4e\ud835\udc57, \ud835\udc5e\u2032\ud835\udc56\ud835\udc57), \ud835\udc57 \uf0ce \ud835\udc3d\ud835\udc56}, \ud835\udc3d\ud835\udc56 \u2286\n1041-4347 (c) 2018 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more\ninformation.\nThis article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI\n10.1109/TKDE.2018.2833478, IEEE Transactions on Knowledge and Data Engineering\nTIN TRUONG ET AL.:  EFFICIENT VERTICAL MINING OF HIGH AVERAGE-UTILITY ITEMSETS BASED ON NOVEL UPPER-BOUNDS \n3 \n \n \ud835\udc3d, \ud835\udc56 \uf0ce \ud835\udc3c} is called an integrated quantitative matrix (or briefly \nintegrated matrix) \ud835\udcac, where \ud835\udcac\ud835\udc41\ud835\udc65\ud835\udc40 \u225d {\ud835\udc5e\u2032\ud835\udc56\ud835\udc57, \ud835\udc56 \uf0ce \ud835\udc3c, \ud835\udc57 \uf0ce \ud835\udc3d}, and \n\ud835\udc5e\u2032\ud835\udc56\ud835\udc57 is defined as follows,   \n\ud835\udc5e\u2032\ud835\udc56\ud835\udc57  \u225d {\ud835\udc5e\ud835\udc56\ud835\udc57 \u2217 \ud835\udc5d(\ud835\udc4e\ud835\udc57), \ud835\udc56\ud835\udc53 (\ud835\udc4e\ud835\udc57, \ud835\udc5e\ud835\udc56\ud835\udc57) \u220a \ud835\udc61\ud835\udc56 \n0                 , \ud835\udc5c\ud835\udc61\u210e\ud835\udc52\ud835\udc5f\ud835\udc64\ud835\udc56\ud835\udc60\ud835\udc52        , \u2200\ud835\udc56 \uf0ce \ud835\udc3c, \ud835\udc57 \uf0ce \ud835\udc3d. \nFurthermore, consider an operator \uf072: 2\ud835\udc9c\uf0ae 2\ud835\udcaf defined \nas follows: \uf022\ud835\udc34 \uf0cd \ud835\udc9c: \ud835\udc34 \uf0b9 \uf0c6, \uf072(\ud835\udc34) \u225d {\ud835\udc61\ud835\udc56 \uf0ce \ud835\udc9f | \ud835\udc5e\u2032\ud835\udc56\ud835\udc57  >   0,  \uf022\ud835\udc4e\ud835\udc57 \uf0ce \n \ud835\udc34} and as convention \uf072(\uf0c6) \u225d  \ud835\udc9f. Intuitively, this operator \nmaps each non-empty itemset \ud835\udc34 to transactions where all \nitems in \ud835\udc34  have purchase quantities greater than zero. \nHereafter, we only consider itemsets in the set \u2110\ud835\udcae \u225d\n {\ud835\udc34 \uf0cd \ud835\udc9c | \uf072(\ud835\udc34) \uf0b9 \uf0c6}, that is itemsets appearing in at least \none transaction. \nExample 1 (Running example). Table 1 and Table 2 show an \nexample QDB \ud835\udc9f containing six transactions and five items \n(\ud835\udc4e, \ud835\udc4f, \ud835\udc50, \ud835\udc51, \ud835\udc52), and a profit vector \ud835\udcab indicating the unit profits \nof items. The integrated matrix \ud835\udcac representing the QDB \ud835\udc9f \nand the profit vector \ud835\udcab is shown in Table 3 as running exam-\nple. For brevity, in the rest of this paper, an itemset {\ud835\udc4f, \ud835\udc51} is \ndenoted as \ud835\udc4f\ud835\udc51, and a set of transactions {\ud835\udc611, \ud835\udc613, \ud835\udc615} is denoted \nas 135. \n \nDefinition 1 (Utility and average-utility measures [12]). Con-\nsider any itemset \ud835\udc34 in \u2110\ud835\udcae and transaction \ud835\udc61\ud835\udc56 in \ud835\udc9f. The utility \nof \ud835\udc34 in the transaction \ud835\udc61\ud835\udc56 is denoted and calculated as the sum \n\ud835\udc62(\ud835\udc34, \ud835\udc61\ud835\udc56) \u225d \u2211\n\ud835\udc57: \ud835\udc4e\ud835\udc57 \u2208 \ud835\udc34 \ud835\udc5e\u2032\ud835\udc56\ud835\udc57\n according to the \ud835\udc56\ud835\udc61\u210e row of the inte-\ngrated matrix \ud835\udcac. The utility \ud835\udc62: \u2110\ud835\udcae \uf0ae \ud835\udc45+  \u225d {\ud835\udc65 \u220a  \ud835\udc45 | \ud835\udc65 >\n 0} of A (in \ud835\udc9f) is denoted and defined as: \n\ud835\udc62(\ud835\udc34) \u225d \u2211\n\ud835\udc61\ud835\udc56 \u2208 \ud835\udf0c(\ud835\udc34) \ud835\udc62(\ud835\udc34, \ud835\udc61\ud835\udc56)\n. \nThe average-utility (AU) measure \ud835\udc4e\ud835\udc62: \u2110\ud835\udcae \uf0ae \ud835\udc45+ of each item-\nset \ud835\udc34 \u220a  \u2110\ud835\udcae is denoted and defined as: \n\ud835\udc4e\ud835\udc62(\ud835\udc34) \u225d  \ud835\udc62(\ud835\udc34)/|\ud835\udc34|. \nIntuitively, the utility of an itemset \ud835\udc34 in a QDB is the \n \n1 iff means \u201cif and only if\u201d \namount of profit yield by the sale of the itemset \ud835\udc34 in trans-\nactions where it appears, while the average-utility is the \nutility divided by the itemset length. Since the utility \n\ud835\udc62(\ud835\udc34, \ud835\udc61\ud835\udc56) is calculated based on the \ud835\udc56\ud835\udc61\u210e row of \ud835\udcac, the value \n\ud835\udc62(\ud835\udc34) is said to be represented in horizontal form.  \nFor example, \uf072(\ud835\udc4f\ud835\udc51) = 135, the average-utility of the \nitemset \ud835\udc4f\ud835\udc51 is calculated as \ud835\udc4e\ud835\udc62(\ud835\udc4f\ud835\udc51) = \ud835\udc62(\ud835\udc4f\ud835\udc51) / 2 = ((160 + 6) \n+ (400 + 8) + (240 + 4)) / 2 = 409. \nDefinition 2 (Transaction utility, the total utility of a QDB \n[12]). The transaction utility of a transaction \ud835\udc61\ud835\udc56 is defined and \ndenoted as \ud835\udc61\ud835\udc62(\ud835\udc61\ud835\udc56) \u225d \u2211\n\ud835\udc5e\ud835\udc56\ud835\udc57\n\u2032\n\ud835\udc5e\ud835\udc56\ud835\udc57\n\u2032 >0\n.  The total utility of a QDB \ud835\udc9f \nis denoted as \ud835\udc47\ud835\udc48 and defined as the sum of its transaction \nutilities, that is \ud835\udc47\ud835\udc48 \u225d \u2211\n\ud835\udc61\ud835\udc56 \u2208 \ud835\udc9f \ud835\udc61\ud835\udc62(\ud835\udc61\ud835\udc56)\n. \nFor example, the transaction utility of the transaction \ud835\udc611 \nis \ud835\udc61\ud835\udc62(\ud835\udc611) = 160 + 100 + 6 + 5 = 271 and the total utility of \ud835\udc9f \nis \ud835\udc47\ud835\udc48 = 271 + 13 + 568 + 93 + 300 + 344 = 1589. \n2.2 Problem statement \nLet \ud835\udc5a\ud835\udc62 be a minimum average-utility threshold defined by \nthe user (a positive number). An itemset \ud835\udc34 in \u2110\ud835\udcae is called \nhigh average-utility (HAU) iff1 \ud835\udc4e\ud835\udc62(\ud835\udc34) \u2a7e  \ud835\udc5a\ud835\udc62. Otherwise, it \nis called unpromising or low average utility (LAU). The \nproblem of high average-utility itemset mining is to find \nthe set of all HAUIs, \ud835\udc3b\ud835\udc34\ud835\udc48\ud835\udc46(\ud835\udc5a\ud835\udc62)  or briefly \ud835\udc3b\ud835\udc34\ud835\udc48\ud835\udc46 \u225d\n {\ud835\udc34 \uf0ce \u2110\ud835\udcae | \ud835\udc4e\ud835\udc62(\ud835\udc34) \u2a7e  \ud835\udc5a\ud835\udc62}. Note that the minimum threshold \n\ud835\udc5a\ud835\udc62 can be also defined as \ud835\udc5a\ud835\udc62 \u225d  \ud835\udeff \u2217  \ud835\udc47\ud835\udc48, where \ud835\udeff is a min-\nimum percentage threshold set by the user. \n3 THEORETICAL RESULTS \nIn this section, we present new theoretical results for the \ndesign of an efficient algorithm for mining high average-\nutility itemsets. In particular, this section explains how the \nutility measure \ud835\udc62 and novel upper-bounds on the average-\nutility measure \ud835\udc4e\ud835\udc62 can be defined using a vertical form \n(columns of the \ud835\udcac matrix), contrarily to previous studies \nthat have used the horizontal form. These results are the \nbasis of the proposed algorithm, presented in Section 4.  \nLet \ud835\udc63\ud835\udc57(\ud835\udc34) \u225d \u2211\n\ud835\udc61\ud835\udc56 \uf0ce \uf072(\ud835\udc34) \ud835\udc5e\u2032\ud835\udc56\ud835\udc57\n be the column utility of an \nitemset \ud835\udc34 in the \ud835\udc57\ud835\udc61\u210e column of the \ud835\udcac matrix. Furthermore, \nlet \ud835\udcb1(\ud835\udc34) \u225d (\ud835\udc63\ud835\udc57(\ud835\udc34), \ud835\udc57 \u2a7e  \ud835\udc5a\ud835\udc56\ud835\udc5b\ud835\udc3c\ud835\udc5b\ud835\udc51(\ud835\udc34)) be the set of all col-\numn utility values associated to \ud835\udc34  starting from the \n\ud835\udc5a\ud835\udc56\ud835\udc5b\ud835\udc3c\ud835\udc5b\ud835\udc51(\ud835\udc34) column, where \ud835\udc5a\ud835\udc56\ud835\udc5b\ud835\udc3c\ud835\udc5b\ud835\udc51(\ud835\udc34)  \u225d \ud835\udc5a\ud835\udc56\ud835\udc5b{\ud835\udc57 \uf0ce \ud835\udc3d | \ud835\udc4e\ud835\udc57\uf0ce\ud835\udc34} \nis the minimum index (or first index) of items \ud835\udc4e\ud835\udc57 in \ud835\udc34. As a \nconvention, \ud835\udc5a\ud835\udc56\ud835\udc5b\ud835\udc3c\ud835\udc5b\ud835\udc51(\uf0c6) \u225d  1. Based on these definitions, \nthe utility of \ud835\udc34 is defined in vertical form as follows. \nLemma 1 (Vertical form of the utility \ud835\udc62(\ud835\udc34)). For each itemset \n\ud835\udc34 \uf0ce \u2110\ud835\udcae, \ud835\udc62(\ud835\udc34) = \u2211\n\ud835\udc57: \ud835\udc4e\ud835\udc57\uf0ce\ud835\udc34 \ud835\udc63\ud835\udc57\n(\ud835\udc34). \n \n \n      (1) \nProof. \ud835\udc62(\ud835\udc34) \u225d \u2211\n[\u2211\n\ud835\udc4e\ud835\udc57 \u2208 \ud835\udc34 \ud835\udc5e\u2032\ud835\udc56\ud835\udc57\n]\n\ud835\udc61\ud835\udc56 \u2208 \ud835\udf0c(\ud835\udc34)\n = \u2211\n[\u2211\n\ud835\udc61\ud835\udc56 \u2208 \ud835\udf0c(\ud835\udc34) \ud835\udc5e\u2032\ud835\udc56\ud835\udc57\n]\n\ud835\udc4e\ud835\udc57 \u2208 \ud835\udc34\n = \n\u2211\n \ud835\udc4e\ud835\udc57 \uf0ce \ud835\udc34 \ud835\udc63\ud835\udc57\n(\ud835\udc34).  \n \n \n \n        \uf07f \nSince \ud835\udc63\ud835\udc57(\ud835\udc34) is calculated based on the \ud835\udc57\ud835\udc61\u210e column of \ud835\udcac, \nthe utility \ud835\udc62(\ud835\udc34) in equation (1) is said to be represented us-\ning the vertical form. For example, consider that \ud835\udc34 = \ud835\udc4f\ud835\udc51. \nThen, \ud835\udc5a\ud835\udc56\ud835\udc5b\ud835\udc3c\ud835\udc5b\ud835\udc51(\ud835\udc34) = 2 (the index of \ud835\udc4f \u2261 \ud835\udc4e2), \ud835\udc631(\ud835\udc34) = \ud835\udc5e\u203211 + \n\ud835\udc5e\u203231 + \ud835\udc5e\u203251 = 30, similarly \ud835\udcb1(\ud835\udc34) = (30, 800, 270, 18, 21), and \n\ud835\udc62(\ud835\udc34) = \ud835\udc632(\ud835\udc34) + \ud835\udc634(\ud835\udc34) = 818. \nTable 1. A QDB \ud835\udc9f. \nTID \\ Item \ud835\udc82\ud835\udc8b \na \nb \nc \nd \ne \n\ud835\udc611 \n0 \n2 \n10 \n3 \n5 \n\ud835\udc612 \n1 \n0 \n0 \n2 \n3 \n\ud835\udc613 \n0 \n5 \n15 \n4 \n10 \n\ud835\udc614 \n6 \n0 \n5 \n3 \n1 \n\ud835\udc615 \n5 \n3 \n2 \n2 \n6 \n\ud835\udc616 \n3 \n4 \n0 \n0 \n6 \nTable 2. A profit vector \ud835\udcab. \n\ud835\udc82\ud835\udc8b \na \nb \nc \nd \ne \n\ud835\udc91(\ud835\udc82\ud835\udc8b) \n6 \n80 \n10 \n2 \n1 \nTable 3. The integrated matrix \ud835\udcac corresponding to Tables 1-2 \nTID \\ Item \n\ud835\udc82\ud835\udc8b \na \nb \nc \nd \n e \n\ud835\udc611 \n0 \n160 \n100 \n6 \n5 \n\ud835\udc612 \n6 \n0 \n0 \n4 \n3 \n\ud835\udc613 \n0 \n400 \n150 \n8 \n10 \n\ud835\udc614 \n36 \n0 \n50 \n6 \n1 \n\ud835\udc615 \n30 \n240 \n20 \n4 \n6 \n\ud835\udc616 \n18 \n320 \n0 \n0 \n6 \n1041-4347 (c) 2018 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more\ninformation.\nThis article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI\n10.1109/TKDE.2018.2833478, IEEE Transactions on Knowledge and Data Engineering\n4 \nIEEE TRANSACTIONS ON KNOWLEDGE AND DATA ENGINEERING,  MANUSCRIPT ID \n \nDuring the expansion of the search space of HAU can-\ndidate itemsets, an itemset \ud835\udc43 is extended with an itemset \ud835\udc35 \nsuch that \ud835\udc43 \u227a \ud835\udc35 (i.e. \u2200\ud835\udc4e \u220a  \ud835\udc43, \u2200\ud835\udc4f \u220a  \ud835\udc35, \ud835\udc4e \u227a  \ud835\udc4f). The result is \nan extension \ud835\udc36 (also called a forward extension) of \ud835\udc43 (with \nitemset \ud835\udc35), denoted as \ud835\udc36 =  \ud835\udc43 \u2a01 \ud835\udc35, i.e. \ud835\udc36 =  \ud835\udc43 \u222a  \ud835\udc35 under \nthe condition that \ud835\udc43 \u227a \ud835\udc35. In this situation, the itemset \ud835\udc43 is \nsaid to be a prefix of \ud835\udc36. For example, if \ud835\udc35 = {\ud835\udc4f} and \ud835\udc43 \u227a {\ud835\udc4f}, \nan item-extension of \ud835\udc43 (with item \ud835\udc4f) is \ud835\udc43 \u2a01 {\ud835\udc4f}, concisely \ndenoted as \ud835\udc43\ud835\udc4f. \nNote that the \ud835\udc4e\ud835\udc62 measure is neither monotonic nor anti-\nmonotonic. Indeed, for example, \ud835\udc4e \uf0cc \ud835\udc4e\ud835\udc4f \uf0cc \ud835\udc4e\ud835\udc4f\ud835\udc50, but \ud835\udc4e\ud835\udc62(\ud835\udc4e) = \n90 < \ud835\udc4e\ud835\udc62(\ud835\udc4e\ud835\udc4f\ud835\udc50) = 290/3 < \ud835\udc4e\ud835\udc62(\ud835\udc4e\ud835\udc4f) = 304. To design pruning \nstrategies for reducing the search space in HAUIM, an UB \nnamed \ud835\udc4e\ud835\udc62\ud835\udc62\ud835\udc4f has been proposed [14]. The \ud835\udc4e\ud835\udc62\ud835\udc62\ud835\udc4f measure is \nan upper bound on \ud835\udc4e\ud835\udc62, which satisfies the DCP (or anti-mon-\notonicity property), i.e. \u2200\ud835\udc34 \u2286 \ud835\udc35 \u2286 \ud835\udc9c, it follows that \ud835\udc4e\ud835\udc62(\ud835\udc34) \n\u2a7d \ud835\udc4e\ud835\udc62\ud835\udc62\ud835\udc4f(\ud835\udc34) and \ud835\udc4e\ud835\udc62\ud835\udc62\ud835\udc4f(\ud835\udc35) \u2a7d \ud835\udc4e\ud835\udc62\ud835\udc62\ud835\udc4f(\ud835\udc34). Therefore, if \ud835\udc34 is low-\n\ud835\udc4e\ud835\udc62\ud835\udc62\ud835\udc4f, i.e. \ud835\udc4e\ud835\udc62\ud835\udc62\ud835\udc4f(\ud835\udc34) <  \ud835\udc5a\ud835\udc62, then all its super itemsets \ud835\udc35 are \nalso low-\ud835\udc4e\ud835\udc62\ud835\udc62\ud835\udc4f and LAU. To prune more unpromising can-\ndidates from the search space, several upper-bounds on \nthe \ud835\udc4e\ud835\udc62 measure have been proposed [16], [18], [19]. How-\never, the set of candidate itemsets considered when using \nthese upper-bounds is often very large. To overcome this \nproblem, this article proposes four new UBs that are tighter \nthan \ud835\udc4e\ud835\udc62\ud835\udc62\ud835\udc4f, named \ud835\udc4e\ud835\udc62\ud835\udc4f1, \ud835\udc4e\ud835\udc62\ud835\udc4f, \ud835\udc56\ud835\udc4e\ud835\udc62\ud835\udc4f and \ud835\udc59\ud835\udc4e\ud835\udc62\ud835\udc4f, which can be \nquickly calculated using the proposed vertical form \ud835\udc63\ud835\udc57(\ud835\udc34). \nThe key idea behind the four new UBs proposed in this \narticle is the following. For any matrix \ud835\udc44\ud835\udc41\ud835\udc65\ud835\udc40 and two non-\nempty index subsets \ud835\udc3c\u2019 \u2286 \ud835\udc3c, \ud835\udc3d\u2019 \u2286 \ud835\udc3d, the following inequation \nholds:  \n\ud835\udc5a\ud835\udc4e\ud835\udc65{\u2211\n\ud835\udc56\u220a\ud835\udc3c\u2032 \ud835\udc5e\ud835\udc56\ud835\udc57\n, \ud835\udc57 \u220a \ud835\udc3d\u2019} \u2a7d \u2211\n\ud835\udc56\u220a\ud835\udc3c\u2032 \ud835\udc5a\ud835\udc4e\ud835\udc65{\ud835\udc5e\ud835\udc56\ud835\udc57, \ud835\udc57 \u220a \ud835\udc3d\u2032}\n. \nIn this inequation, each term \ud835\udc5a\ud835\udc4e\ud835\udc65{\ud835\udc5e\ud835\udc56\ud835\udc57, \ud835\udc57 \u220a \ud835\udc3d\u2019} is calcu-\nlated in horizontal form, and has been used in previous UBs \nsuch as \ud835\udc4e\ud835\udc62\ud835\udc62\ud835\udc4f  and \ud835\udc5f\ud835\udc61\ud835\udc62\ud835\udc4f , \ud835\udc59\ud835\udc62\ud835\udc4f  [18], while the term \ud835\udc63\ud835\udc57  \u225d\n \u2211\n\ud835\udc56\u220a\ud835\udc3c\u2032 \ud835\udc5e\ud835\udc56\ud835\udc57\n is calculated in vertical form, and is used in the \nnovel UBs presented in this paper. Based on this inequa-\ntion, it can be found that UBs based on the vertical form are \noften better than those based on the horizontal form. The \nnext subsection presents the four novel upper-bounds. \nThen, the following subsections introduce a framework to \nevaluate and compare upper-bounds for HAUIM, and \nnovel pruning strategies. \n3.1 Four novel UBs \nIn this subsection, to answer the question (\ud835\udc441), we propose \nfour novel UBs named \ud835\udc4e\ud835\udc62\ud835\udc4f1, \ud835\udc4e\ud835\udc62\ud835\udc4f, \ud835\udc56\ud835\udc4e\ud835\udc62\ud835\udc4f and \ud835\udc59\ud835\udc4e\ud835\udc62\ud835\udc4f that are \ngradually tighter than the traditional UB \ud835\udc4e\ud835\udc62\ud835\udc62\ud835\udc4f on \ud835\udc4e\ud835\udc62, have \ngradually weaker anti-monotone-like properties and prun-\ning effects as shown below. Firstly, we define two new UBs \ngradually tighter than \ud835\udc4e\ud835\udc62\ud835\udc62\ud835\udc4f named \ud835\udc4e\ud835\udc62\ud835\udc4f1 and \ud835\udc4e\ud835\udc62\ud835\udc4f, which \nsatisfy two stronger anti-monotone-like properties, and have \nrespectively strong width and width pruning effects as it will \nbe explained in next sections. \nDefinition 3 (The UB \ud835\udc4e\ud835\udc62\ud835\udc62\ud835\udc4f [16] and two novel UBs, named \n\ud835\udc4e\ud835\udc62\ud835\udc4f1 and \ud835\udc4e\ud835\udc62\ud835\udc4f). For each itemset \ud835\udc34 \uf0ce \u2110\ud835\udcae, the traditional UB \nof \n\ud835\udc34\n is \ndenoted \nand \ndefined \nas \n\ud835\udc4e\ud835\udc62\ud835\udc62\ud835\udc4f(\ud835\udc34) \u225d\n \u2211\n\ud835\udc61\ud835\udc56 \uf0ce \uf072(\ud835\udc34) \ud835\udc5a\ud835\udc4e\ud835\udc65{ \ud835\udc5e\u2032\ud835\udc56\ud835\udc57, \ud835\udc57 \u220a \ud835\udc3d}\n. Two novel UBs of \ud835\udc34, named \ud835\udc4e\ud835\udc62\ud835\udc4f1 \nand \ud835\udc4e\ud835\udc62\ud835\udc4f, are defined as: \n\ud835\udc4e\ud835\udc62\ud835\udc4f1(\ud835\udc34) \u225d  \ud835\udc5a\ud835\udc4e\ud835\udc65{\ud835\udc63\ud835\udc58(\ud835\udc34) | \ud835\udc58 \u2a7e  1}, \n \n(2) \n\ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc34) \u225d \ud835\udc4e\ud835\udc62\ud835\udc4f\ud835\udc5a\ud835\udc56\ud835\udc5b\ud835\udc3c\ud835\udc5b\ud835\udc51(\ud835\udc34)(\ud835\udc34),  \n \n(3) \nwhere \ud835\udc4e\ud835\udc62\ud835\udc4f\ud835\udc57(\ud835\udc34) \u225d  \ud835\udc5a\ud835\udc4e\ud835\udc65{\ud835\udc63\ud835\udc58(\ud835\udc34) | \ud835\udc58 \u2a7e  \ud835\udc57}, \u2200\ud835\udc57 \uf0ce \ud835\udc3d. \nFor example, consider the itemset \ud835\udc34 =  \ud835\udc50\ud835\udc51. It is found \nthat \ud835\udc5a\ud835\udc56\ud835\udc5b\ud835\udc3c\ud835\udc5b\ud835\udc51(\ud835\udc34) =  3, \ud835\udf0c(\ud835\udc34) =  1345, \ud835\udc4e\ud835\udc62\ud835\udc62\ud835\udc4f(\ud835\udc34) = 160 + 400 + \n50 + 240 = 850. Moreover, \ud835\udc631(\ud835\udc34) = \ud835\udc5e\u203211 + \ud835\udc5e\u203231 + \ud835\udc5e\u203241 + \ud835\udc5e\u203251= \n0 + 0 + 36 + 30 = 66 and similarly \ud835\udcb1(\ud835\udc34) = (66, 800, 320, 24, \n22). The average-utility of \ud835\udc34 is \ud835\udc4e\ud835\udc62(\ud835\udc34) = (\ud835\udc633(\ud835\udc34) + \ud835\udc634(\ud835\udc34)) / 2 \n= 172, \ud835\udc4e\ud835\udc62\ud835\udc4f1(\ud835\udc34) = \ud835\udc5a\ud835\udc4e\ud835\udc65{66, 800, 320, 24, 22} = 800, \ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc34) = \n\ud835\udc4e\ud835\udc62\ud835\udc4f3(\ud835\udc34) = \ud835\udc5a\ud835\udc4e\ud835\udc65{320, 24, 22} = 320. It is observed that \ud835\udc4e\ud835\udc62(\ud835\udc34) \n< \ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc34) < \ud835\udc4e\ud835\udc62\ud835\udc4f1(\ud835\udc34) < \ud835\udc4e\ud835\udc62\ud835\udc62\ud835\udc4f(\ud835\udc34), i.e. that the two proposed \nupper-bounds are tighter than \ud835\udc4e\ud835\udc62\ud835\udc62\ud835\udc4f.  \nTo design an upper-bound that is tighter than \ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc34), \nthe following observation is made. Consider that \ud835\udc34 = \ud835\udc4e\ud835\udc50\ud835\udc51, \nwhich does not contain the item \ud835\udc4e2 \u2261 \ud835\udc4f , and that \n\ud835\udc5a\ud835\udc56\ud835\udc5b\ud835\udc3c\ud835\udc5b\ud835\udc51(\ud835\udc34) = 1. The value  \ud835\udc632(\ud835\udc34) in the definition \ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc34) \n= \ud835\udc4e\ud835\udc62\ud835\udc4f1(\ud835\udc34)  \u225d \ud835\udc5a\ud835\udc4e\ud835\udc65{\ud835\udc63\ud835\udc58(\ud835\udc34) | \ud835\udc58 \u2a7e  1}  may result in a value \n\ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc34) that is larger than \ud835\udc5a\ud835\udc4e\ud835\udc65{\ud835\udc63\ud835\udc58(\ud835\udc34) | \ud835\udc58 =  1, 3, 4 or \ud835\udc58 >\n 4}. This observation leads to an improved UB \ud835\udc56\ud835\udc4e\ud835\udc62\ud835\udc4f on \ud835\udc4e\ud835\udc62 \nthat is tighter than \ud835\udc4e\ud835\udc62\ud835\udc4f and another UB \ud835\udc59\ud835\udc4e\ud835\udc62\ud835\udc4f that is incom-\nparable with \ud835\udc56\ud835\udc4e\ud835\udc62\ud835\udc4f. Both of them will satisfy weaker anti-\nmonotone-like properties and have the depth pruning effect \nas shown in Proposition 1 and Theorem 1 below. \nDefinition 4 (Two novel UBs, named  \ud835\udc56\ud835\udc4e\ud835\udc62\ud835\udc4f, \ud835\udc59\ud835\udc4e\ud835\udc62\ud835\udc4f). For each \nitemset \ud835\udc34 = \ud835\udc43\ud835\udc4e\ud835\udc5a\uf0ce \u2110\ud835\udcae, a third improved UB of \ud835\udc34 is denoted \nand defined as follows: \n\ud835\udc56\ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc34) \u225d \ud835\udc5a\ud835\udc4e\ud835\udc65{\ud835\udc63\ud835\udc58(\ud835\udc34)|\ud835\udc4e\ud835\udc58 \u220a \ud835\udc34 \ud835\udc5c\ud835\udc5f \ud835\udc58 > \ud835\udc5a}.     (4) \nA fourth looser UB named \ud835\udc59\ud835\udc4e\ud835\udc62\ud835\udc4f of \ud835\udc34 is defined as \n\ud835\udc59\ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc34) \u225d \ud835\udc4e\ud835\udc62(\ud835\udc34) + \ud835\udc4e\ud835\udc62\ud835\udc4f\ud835\udc5a+1(\ud835\udc34). \n \n(5)  \nFor example, \ud835\udc56\ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc4e)  = \ud835\udc4e\ud835\udc62\ud835\udc4f1(\ud835\udc4e)  = \ud835\udc5a\ud835\udc4e\ud835\udc65{\ud835\udc63\ud835\udc56(\ud835\udc4e) , \ud835\udc56 =\n1, \u2026 , 5} = \ud835\udc5a\ud835\udc4e\ud835\udc65{90, 560, 70, 14, 16} = 560 and \ud835\udc56\ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc51) = \n\ud835\udc4e\ud835\udc62\ud835\udc4f4(\ud835\udc51) = \ud835\udc5a\ud835\udc4e\ud835\udc65{\ud835\udc634(\ud835\udc51), \ud835\udc635(\ud835\udc51)} = 28. Consider the itemset \ud835\udc34 \n= \ud835\udc4e\ud835\udc50\ud835\udc51. We have \ud835\udf0c(\ud835\udc34) = 45, \ud835\udc5a\ud835\udc56\ud835\udc5b\ud835\udc3c\ud835\udc5b\ud835\udc51(\ud835\udc34) = 1, \ud835\udc51 = \ud835\udc4e4, \ud835\udc5a = 4, \n\ud835\udc4e\ud835\udc62\ud835\udc62\ud835\udc4f(\ud835\udc34) = \ud835\udc5a\ud835\udc4e\ud835\udc65{36, 50, 6, 1} + \ud835\udc5a\ud835\udc4e\ud835\udc65{30, 240, 20, 4, 6} = 290, \n\ud835\udc4e\ud835\udc62(\ud835\udc34) = (92 + 54) / 3 = 146/3. Moreover, \ud835\udc631(\ud835\udc34) = \ud835\udc5e\u203241 + \ud835\udc5e\u203251 \n= 36 + 30 = 66 and similarly, \ud835\udcb1(\ud835\udc34) = (66, 240, 70, 10, 7). \nThus, \ud835\udc4e\ud835\udc62\ud835\udc4f1(\ud835\udc34)  = \ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc34)  = \ud835\udc5a\ud835\udc4e\ud835\udc65{\ud835\udc63\ud835\udc56(\ud835\udc34) , \ud835\udc56 \u2a7e 1}  = 240, \n\ud835\udc56\ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc34) = \ud835\udc5a\ud835\udc4e\ud835\udc65{\ud835\udc63\ud835\udc58(\ud835\udc34) | \ud835\udc58 = 1, 3, 4 or \ud835\udc58 > 4} = 70. Moreo-\nver, \ud835\udc59\ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc34) = \ud835\udc4e\ud835\udc62(\ud835\udc34) + \ud835\udc5a\ud835\udc4e\ud835\udc65{\ud835\udc635(\ud835\udc34)} = 167/3. Thus, in this \nexample, \ud835\udc4e\ud835\udc62(\ud835\udc34) < \ud835\udc59\ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc34) < \ud835\udc56\ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc34) < \ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc34) \u2a7d \ud835\udc4e\ud835\udc62\ud835\udc4f1(\ud835\udc34) \n< \ud835\udc4e\ud835\udc62\ud835\udc62\ud835\udc4f(\ud835\udc34).   \nIn the following, for any UB \ud835\udc62\ud835\udc4f, an itemset \ud835\udc34 is called \nhigh-ub iff \ud835\udc62\ud835\udc4f(\ud835\udc34) \u2a7e \ud835\udc5a\ud835\udc62 . Let us denote \ud835\udc3b\ud835\udc34\ud835\udc48\ud835\udc351  \u225d\n {\ud835\udc34 \uf0ce \u2110\ud835\udcae | \ud835\udc4e\ud835\udc62\ud835\udc4f1(\ud835\udc34) \u2a7e  \ud835\udc5a\ud835\udc62} , \ud835\udc3b\ud835\udc34\ud835\udc48\ud835\udc35 \u225d {\ud835\udc34 \uf0ce \u2110\ud835\udcae | \ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc34) \u2a7e\n \ud835\udc5a\ud835\udc62} and \ud835\udc3b\ud835\udc3c\ud835\udc34\ud835\udc48\ud835\udc35 \u225d {\ud835\udc34 \uf0ce \u2110\ud835\udcae | \ud835\udc56\ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc34) \u2a7e \ud835\udc5a\ud835\udc62} as the sets of \nall high-\ud835\udc4e\ud835\udc62\ud835\udc4f1 , high-\ud835\udc4e\ud835\udc62\ud835\udc4f and high-\ud835\udc56\ud835\udc4e\ud835\udc62\ud835\udc4f itemsets respec-\ntively. \nRecently, several UBs have been proposed such as \n\ud835\udc5f\ud835\udc61\ud835\udc62\ud835\udc4f, \ud835\udc59\ud835\udc62\ud835\udc4f [18], \ud835\udc59\ud835\udc62\ud835\udc4f\ud835\udc4e\ud835\udc62, \ud835\udc61\ud835\udc62\ud835\udc4f\ud835\udc4e\ud835\udc62 [19] and \ud835\udc5a\ud835\udc4e\ud835\udc62 [20]. Moreover, \nthis article has proposed four novel UBs. Thus, a problem \nis how to evaluate and compare all these UBs. A simple \nway is to compare their values. Let \ud835\udc62\ud835\udc4f1 and \ud835\udc62\ud835\udc4f2 be two \nUBs.  \ud835\udc62\ud835\udc4f1 is said to be tighter than \ud835\udc62\ud835\udc4f2, denoted as \ud835\udc62\ud835\udc4f1 \u226a \n\ud835\udc62\ud835\udc4f2, iff \ud835\udc62\ud835\udc4f1(\ud835\udc34) \u2a7d \ud835\udc62\ud835\udc4f2(\ud835\udc34), \u2200\ud835\udc34 \u220a \u2110\ud835\udcae. However, two upper-\nbounds may be incomparable, i.e. if there exist two different \nitemsets \ud835\udc34 and \ud835\udc35 such that \ud835\udc62\ud835\udc4f1(\ud835\udc34) > \ud835\udc62\ud835\udc4f2(\ud835\udc34) and \ud835\udc62\ud835\udc4f1(\ud835\udc35) < \n\ud835\udc62\ud835\udc4f2(\ud835\udc35). A second way of comparing upper-bounds is to \nconsider whether they respect the anti-monotonicity prop-\nerty (\ud835\udc9c\u2133) or variations of that property. The \ud835\udc4e\ud835\udc62\ud835\udc62\ud835\udc4f upper-\n1041-4347 (c) 2018 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more\ninformation.\nThis article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI\n10.1109/TKDE.2018.2833478, IEEE Transactions on Knowledge and Data Engineering\nTIN TRUONG ET AL.:  EFFICIENT VERTICAL MINING OF HIGH AVERAGE-UTILITY ITEMSETS BASED ON NOVEL UPPER-BOUNDS \n5 \n \nbound satisfies \ud835\udc9c\u2133, which allows pruning many low-au \nitemsets. However, \ud835\udc4e\ud835\udc62\ud835\udc62\ud835\udc4f provides a too loose overestima-\ntion of the average-utility of itemsets, which can result in \nlarge candidate sets, especially for low \ud835\udc5a\ud835\udc62  values. To \nprune more candidates, several UBs (including those pro-\nposed in this paper), respect variations of the \ud835\udc9c\u2133 . To \ncompare upper-bounds and answer the second research \nquestion (\ud835\udc442) of this study, the next subsection proposes a \ngeneric framework for evaluating UBs using anti-mono-\ntone-like (\ud835\udc9c\u2133\u2112) criteria. Based on this framework, the fol-\nlowing subsection develops different pruning strategies \nand evaluates UBs in terms of their pruning ability. \n3.2 Generic framework for evaluating UBs \nDefinition 5 (Anti-monotone-like (\ud835\udc9c\u2133\u2112) criteria of UBs). Let \n\ud835\udc36, \ud835\udc37, \ud835\udc38, \ud835\udc43, \ud835\udc45 be itemsets in \u2110\ud835\udcae and \ud835\udc62\ud835\udc4f be an UB on the aver-\nage utility \ud835\udc4e\ud835\udc62, i.e. \ud835\udc4e\ud835\udc62(\ud835\udc43) \u2a7d  \ud835\udc62\ud835\udc4f(\ud835\udc43), \u2200\ud835\udc43 \uf0ce \u2110\ud835\udcae. Then \ud835\udc62\ud835\udc4f is \nsaid to satisfy \na. the anti-monotonicity property (or criterion), denoted as \n\ud835\udc9c\u2133(\ud835\udc62\ud835\udc4f), iff \ud835\udc62\ud835\udc4f(\ud835\udc36) \u2a7d  \ud835\udc62\ud835\udc4f(\ud835\udc43), \u2200\ud835\udc36 \uf0ca \ud835\udc43.  \nb. the anti-monotonicity property w.r.t. bi-directional exten-\nsion, denoted as \u212c\ud835\udc56\ud835\udc9f\u2130\ud835\udc9c\u2133(\ud835\udc62\ud835\udc4f), iff \ud835\udc62\ud835\udc4f(\ud835\udc36) \u2a7d \ud835\udc62\ud835\udc4f(\ud835\udc43),  \u2200\ud835\udc43 =\n\ud835\udc45 \u2a01 \ud835\udc37, \ud835\udc36 = \ud835\udc45 \u2a01 \ud835\udc38 such that \ud835\udc45 \u2260 \uf0c6 and \ud835\udc37 \u2286 \ud835\udc38.  \nc. the anti-monotonicity property w.r.t. forward extension, de-\nnoted as \u2131\u2130\ud835\udc9c\u2133(\ud835\udc62\ud835\udc4f), iff \ud835\udc62\ud835\udc4f(\ud835\udc36) \u2a7d \ud835\udc62\ud835\udc4f(\ud835\udc43),  \u2200\ud835\udc43, \ud835\udc36 = \ud835\udc43 \u2a01 \ud835\udc38 \nsuch that \ud835\udc43 \u2260 \uf0c6 (i.e. \ud835\udc36 is a forward extension of the non-\nempty prefix \ud835\udc43). \nd. the depth pruning condition by forward extension, denoted \nas \ud835\udc9f\ud835\udcab\ud835\udc9e(\ud835\udc62\ud835\udc4f), if \ud835\udc4e\ud835\udc62(\ud835\udc36) \u2a7d \ud835\udc62\ud835\udc4f(\ud835\udc43), \u2200\ud835\udc43, \ud835\udc36 = \ud835\udc43 \u2a01 \ud835\udc38 such that \n\ud835\udc43 \u2260 \uf0c6. \nIt is clear that if \ud835\udc9c\u2133(\ud835\udc62\ud835\udc4f), then \ud835\udc62\ud835\udc4f satisfies the down-\nward closure property. This means that if \ud835\udc43 is low-ub, i.e. \n\ud835\udc62\ud835\udc4f(\ud835\udc43) <  \ud835\udc5a\ud835\udc62, then all its super itemsets \ud835\udc36 are also low-ub \n(because \ud835\udc62\ud835\udc4f(\ud835\udc36) \u2a7d  \ud835\udc62\ud835\udc4f(\ud835\udc43) <  \ud835\udc5a\ud835\udc62 ) and thus \ud835\udc36  can be \npruned since it is also low-au, i.e. \ud835\udc4e\ud835\udc62(\ud835\udc36) \u2a7d  \ud835\udc62\ud835\udc4f(\ud835\udc36) <  \ud835\udc5a\ud835\udc62.  \nProposition 1 (Relation between the \ud835\udc9c\u2133\u2112 criteria of UBs). \nLet \ud835\udc62\ud835\udc4f be an UB. Then,  \n\ud835\udc9c\u2133(\ud835\udc62\ud835\udc4f) \u21d2 \u212c\ud835\udc56\ud835\udc9f\u2130\ud835\udc9c\u2133(\ud835\udc62\ud835\udc4f) \u21d2 \u2131\u2130\ud835\udc9c\u2133(\ud835\udc62\ud835\udc4f) \u21d2 \ud835\udc9f\ud835\udcab\ud835\udc9e(\ud835\udc62\ud835\udc4f). \nProof. The correctness of the assertion \u201c \ud835\udc9c\u2133(\ud835\udc62\ud835\udc4f)  \u21d2 \n\u212c\ud835\udc56\ud835\udc9f\u2130\ud835\udc9c\u2133(\ud835\udc62\ud835\udc4f)\u201d is obvious. The one \u201c\u212c\ud835\udc56\ud835\udc9f\u2130\ud835\udc9c\u2133(\ud835\udc62\ud835\udc4f) \u21d2 \n\u2131\u2130\ud835\udc9c\u2133(\ud835\udc62\ud835\udc4f)\u201d is implied by considering \ud835\udc37 = \uf0c6. Finally, \nbecause \ud835\udc4e\ud835\udc62(\ud835\udc36) \u2a7d \ud835\udc62\ud835\udc4f(\ud835\udc36) \u2a7d \ud835\udc62\ud835\udc4f(\ud835\udc43), \u2200\ud835\udc43 \u2286 \ud835\udc36 = \ud835\udc43 \u2a01 \ud835\udc38: \ud835\udc43 \u2260\n \uf0c6, it follows that \u201c\u2131\u2130\ud835\udc9c\u2133(\ud835\udc62\ud835\udc4f) \u21d2 \ud835\udc9f\ud835\udcab\ud835\udc9e(\ud835\udc62\ud835\udc4f)\u201d. \n         \uf07f \nIn this context, we can say that, \ud835\udc9c\u2133 (or \ud835\udc9f\ud835\udcab\ud835\udc9e) is the \nstrongest (or weakest respectively) \ud835\udc9c\u2133\u2112 criterion among \nthe four above ones. \nLemma 2 (Properties of \ud835\udc4e\ud835\udc62\ud835\udc4f\ud835\udc57). \na. (Decreasing property of \ud835\udc4e\ud835\udc62\ud835\udc4f\ud835\udc57(\ud835\udc34) w.r.t. \ud835\udc57 \uf0ce \ud835\udc3d) For each item-\nset \ud835\udc34 \uf0ce \u2110\ud835\udcae, \uf022\ud835\udc58 \u2a7e \ud835\udc57 \u2a7e 1, \ud835\udc4e\ud835\udc62\ud835\udc4f\ud835\udc58(\ud835\udc34) \u2a7d \ud835\udc4e\ud835\udc62\ud835\udc4f\ud835\udc57(\ud835\udc34) \u2a7d \ud835\udc4e\ud835\udc62\ud835\udc4f1(\ud835\udc34). \nb. (Anti-monotonicity property of \ud835\udc4e\ud835\udc62\ud835\udc4f\ud835\udc57(\ud835\udc34) w.r.t. \ud835\udc34 \uf0ce \u2110\ud835\udcae) For \neach index \ud835\udc57 \uf0ce \ud835\udc3d, then \ud835\udc9c\u2133(\ud835\udc4e\ud835\udc62\ud835\udc4f\ud835\udc57). \nProof. \na. Since {\ud835\udc63\ud835\udc56(\ud835\udc34), \uf022\ud835\udc56 \u2a7e \ud835\udc58} \u2286 {\ud835\udc63\ud835\udc56(\ud835\udc34), \uf022\ud835\udc56 \u2a7e \ud835\udc57} \u2286 {\ud835\udc63\ud835\udc56(\ud835\udc34), \uf022\ud835\udc56 \u2a7e 1}, \n\uf022\ud835\udc58 \u2a7e \ud835\udc57 \u2a7e 1 , it follows that \ud835\udc4e\ud835\udc62\ud835\udc4f\ud835\udc58(\ud835\udc34)  \u2a7d \ud835\udc4e\ud835\udc62\ud835\udc4f\ud835\udc57(\ud835\udc34)  \u2a7d \n\ud835\udc4e\ud835\udc62\ud835\udc4f1(\ud835\udc34).  \nb. Since \u2200\ud835\udc34 \u2286  \ud835\udc35 \uf0ce \u2110\ud835\udcae, \uf072(\ud835\udc34) \uf0ca \uf072(\ud835\udc35), then \u2200\ud835\udc58 \u2a7e \ud835\udc57, \ud835\udc63\ud835\udc58(\ud835\udc35) = \n\u2211\n\ud835\udc61\ud835\udc56\uf0ce\uf072(\ud835\udc35) \ud835\udc5e\u2032\ud835\udc56\ud835\udc58\n \u2a7d \u2211\n\ud835\udc61\ud835\udc56 \uf0ce \uf072(\ud835\udc34) \ud835\udc5e\u2032\ud835\udc56\ud835\udc58\n = \ud835\udc63\ud835\udc58(\ud835\udc34) \u2a7d \ud835\udc5a\ud835\udc4e\ud835\udc65{\ud835\udc63\ud835\udc58(\ud835\udc34), \uf022\ud835\udc58 \u2a7e\n\ud835\udc57}  = \ud835\udc4e\ud835\udc62\ud835\udc4f\ud835\udc57(\ud835\udc34) , it follows that \ud835\udc5a\ud835\udc4e\ud835\udc65{\ud835\udc63\ud835\udc58(\ud835\udc35), \uf022\ud835\udc58 \u2a7e \ud835\udc57}  = \n\ud835\udc4e\ud835\udc62\ud835\udc4f\ud835\udc57(\ud835\udc35) \u2a7d \ud835\udc4e\ud835\udc62\ud835\udc4f\ud835\udc57(\ud835\udc34). \n \n \n \n         \uf07f \nTheorem 1 (Properties of \ud835\udc56\ud835\udc4e\ud835\udc62\ud835\udc4f, \ud835\udc4e\ud835\udc62\ud835\udc4f, \ud835\udc4e\ud835\udc62\ud835\udc4f1 and \ud835\udc4e\ud835\udc62\ud835\udc62\ud835\udc4f).  \na. (Anti-monontonicity property of \ud835\udc4e\ud835\udc62\ud835\udc4f1 and \ud835\udc4e\ud835\udc62\ud835\udc62\ud835\udc4f)  \n\ud835\udc9c\u2133(\ud835\udc4e\ud835\udc62\ud835\udc4f1) and \ud835\udc9c\u2133(\ud835\udc4e\ud835\udc62\ud835\udc62\ud835\udc4f). \nb. (Anti-monontonicity property of \ud835\udc4e\ud835\udc62\ud835\udc4f w.r.t. bi-directional \nextension) \u212c\ud835\udc56\ud835\udc9f\u2130\ud835\udc9c\u2133(\ud835\udc4e\ud835\udc62\ud835\udc4f). \nc. (Anti-monontonicity property of \ud835\udc56\ud835\udc4e\ud835\udc62\ud835\udc4f w.r.t. forward exten-\nsion) \u2131\u2130\ud835\udc9c\u2133(\ud835\udc56\ud835\udc4e\ud835\udc62\ud835\udc4f). \nd. (Depth pruning condition by forward extension of \ud835\udc59\ud835\udc4e\ud835\udc62\ud835\udc4f) \n\ud835\udc9f\ud835\udcab\ud835\udc9e(\ud835\udc59\ud835\udc4e\ud835\udc62\ud835\udc4f). \ne. \ud835\udc4e\ud835\udc62\ud835\udc62\ud835\udc4f , \ud835\udc4e\ud835\udc62\ud835\udc4f1 , \ud835\udc4e\ud835\udc62\ud835\udc4f  and \ud835\udc56\ud835\udc4e\ud835\udc62\ud835\udc4f  are respectively gradually \ntighter upper-bounds on \ud835\udc4e\ud835\udc62,  i.e. \ud835\udc4e\ud835\udc62(\ud835\udc34)  \u2a7d  \ud835\udc56\ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc34)  \u2a7d \n\ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc34) \u2a7d \ud835\udc4e\ud835\udc62\ud835\udc4f1(\ud835\udc34) \u2a7d \ud835\udc4e\ud835\udc62\ud835\udc62\ud835\udc4f(\ud835\udc34), \u2200\ud835\udc34 \uf0ce \u2110\ud835\udcae.  \nThus, \ud835\udc3b\ud835\udc34\ud835\udc48\ud835\udc46  \uf0cd \ud835\udc3b\ud835\udc3c\ud835\udc34\ud835\udc48\ud835\udc35  \uf0cd \ud835\udc3b\ud835\udc34\ud835\udc48\ud835\udc35  \u2286 \ud835\udc3b\ud835\udc34\ud835\udc48\ud835\udc351  \u2286 \n{\ud835\udc34 \uf0ce \u2110\ud835\udcae | \ud835\udc4e\ud835\udc62\ud835\udc62\ud835\udc4f(\ud835\udc34) \u2a7e  \ud835\udc5a\ud835\udc62}. \nf. \ud835\udc59\ud835\udc4e\ud835\udc62\ud835\udc4f is also an UB on \ud835\udc4e\ud835\udc62; \ud835\udc59\ud835\udc4e\ud835\udc62\ud835\udc4f and \ud835\udc56\ud835\udc4e\ud835\udc62\ud835\udc4f are incomparable. \nProof. Given any itemsets \ud835\udc36, \ud835\udc37, \ud835\udc38, \ud835\udc43, \ud835\udc45 \uf0ce \u2110\ud835\udcae such that \ud835\udc43 \u2260 \n\uf0c6 and \ud835\udc43 \u2286 \ud835\udc36, we always have \uf072(\ud835\udc36) \uf0cd \uf072(\ud835\udc43) and \ud835\udc63\ud835\udc58(\ud835\udc36) \u2a7d \n\ud835\udc63\ud835\udc58(\ud835\udc43), \u2200\ud835\udc58 \uf0ce \ud835\udc3d. \na. The first assertion is implied from Lemma 2.b. \nb. For \ud835\udc43 =  \ud835\udc45 \u2a01 \ud835\udc37 and \ud835\udc36 =  \ud835\udc45 \u2a01 \ud835\udc38 such that \ud835\udc45 \u2260 \uf0c6 and \n\ud835\udc37 \u2286  \ud835\udc38 , then \ud835\udc43 \u2286  \ud835\udc36 , \ud835\udc5a\ud835\udc56\ud835\udc5b\ud835\udc3c\ud835\udc5b\ud835\udc51(\ud835\udc45) =  \ud835\udc5a\ud835\udc56\ud835\udc5b\ud835\udc3c\ud835\udc5b\ud835\udc51(\ud835\udc43) =\n \ud835\udc5a\ud835\udc56\ud835\udc5b\ud835\udc3c\ud835\udc5b\ud835\udc51(\ud835\udc36) , \ud835\udc63\ud835\udc58(\ud835\udc36)  \u2a7d \ud835\udc63\ud835\udc58(\ud835\udc43) , \u2200\ud835\udc58 \u2a7e  \ud835\udc5a\ud835\udc56\ud835\udc5b\ud835\udc3c\ud835\udc5b\ud835\udc51(\ud835\udc45) . Thus, \n\ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc36) \u2a7d \ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc43). \nc. Consider \ud835\udc36 = \ud835\udc43 \u2a01 \ud835\udc38  with non-empty \ud835\udc43  and \ud835\udc38 . Then \n\ud835\udc5a\ud835\udc4e\ud835\udc65\ud835\udc3c\ud835\udc5b\ud835\udc51(\ud835\udc43) < \ud835\udc5a\ud835\udc56\ud835\udc5b\ud835\udc3c\ud835\udc5b\ud835\udc51(\ud835\udc38), so {\ud835\udc58 \uf0ce \ud835\udc3d | \ud835\udc4e\ud835\udc58 \uf0ce \ud835\udc43 \u2a01 \ud835\udc38 or \ud835\udc58 >\n\ud835\udc5a\ud835\udc4e\ud835\udc65\ud835\udc3c\ud835\udc5b\ud835\udc51(\ud835\udc38)}  \uf0cd {\ud835\udc58 \uf0ce \ud835\udc3d | \ud835\udc4e\ud835\udc58 \uf0ce \ud835\udc43  or \ud835\udc58 >  \ud835\udc5a\ud835\udc4e\ud835\udc65\ud835\udc3c\ud835\udc5b\ud835\udc51(\ud835\udc43)} . \nThus, \ud835\udc56\ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc36) \u2a7d \ud835\udc56\ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc43).  \nd. \u2200\ud835\udc43 \u2286  \ud835\udc36 =  \ud835\udc43 \u2a01 \ud835\udc38  such that \ud835\udc43 \u2260  \uf0c6 , set \u0394 \u225d\n \ud835\udc5a\ud835\udc4e\ud835\udc65{\ud835\udc63\ud835\udc57(\ud835\udc43) | \ud835\udc57 >  \ud835\udc5a\ud835\udc4e\ud835\udc65\ud835\udc3c\ud835\udc5b\ud835\udc51(\ud835\udc43)}, then  \n     \ud835\udc59\ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc43)  - \ud835\udc4e\ud835\udc62(\ud835\udc36)  = \u0394 + \n\ud835\udc62(\ud835\udc43)\n|\ud835\udc43|\n - \n\ud835\udc62(\ud835\udc36)\n|\ud835\udc43|+|\ud835\udc38|  = \u0394 + \n|\ud835\udc43|.(\ud835\udc62(\ud835\udc43)\u2212\ud835\udc62(\ud835\udc36))+|\ud835\udc38|.\ud835\udc62(\ud835\udc43)\n|\ud835\udc43|.(|\ud835\udc43|+|\ud835\udc38|)\n \u2a7e \u0394  - \n\ud835\udc62(\ud835\udc36)\u2212\ud835\udc62(\ud835\udc43)\n|\ud835\udc43|+|\ud835\udc38|\n \u2a7e 0, so \ud835\udc4e\ud835\udc62(\ud835\udc36) \u2a7d\n \ud835\udc59\ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc43), because \n   \ud835\udc62(\ud835\udc36) - \ud835\udc62(\ud835\udc43) = \u2211\n[\u2211\n\ud835\udc4e\ud835\udc57 \u2208 \ud835\udc36 \ud835\udc5e\u2032\ud835\udc56\ud835\udc57\n]\n\ud835\udc61\ud835\udc56 \u2208 \ud835\udf0c(\ud835\udc36)\n - \u2211\n[\u2211\n\ud835\udc4e\ud835\udc57 \u2208 \ud835\udc43 \ud835\udc5e\u2032\ud835\udc56\ud835\udc57\n]\n\ud835\udc61\ud835\udc56 \u2208 \ud835\udf0c(\ud835\udc43)\n  \n     \u2a7d \u2211\n[\u2211\n\ud835\udc4e\ud835\udc57 \u2208 \ud835\udc36 \ud835\udc5e\u2032\ud835\udc56\ud835\udc57\n\u2212 \u2211\n\ud835\udc4e\ud835\udc57 \u2208 \ud835\udc43 \ud835\udc5e\u2032\ud835\udc56\ud835\udc57\n]\n\ud835\udc61\ud835\udc56 \u2208 \ud835\udf0c(\ud835\udc43)\n \n     = \u2211\n[\u2211\n\ud835\udc4e\ud835\udc57 \u2208 \ud835\udc38 \ud835\udc5e\u2032\ud835\udc56\ud835\udc57\n]\n\ud835\udc61\ud835\udc56 \u2208 \ud835\udf0c(\ud835\udc43)\n = \u2211\n[\u2211\n\ud835\udc61\ud835\udc56 \u2208 \ud835\udf0c(\ud835\udc43) \ud835\udc5e\u2032\ud835\udc56\ud835\udc57\n]\n\ud835\udc4e\ud835\udc57 \u2208 \ud835\udc38\n  \n     = \u2211\n\ud835\udc4e\ud835\udc57 \u2208 \ud835\udc38 \ud835\udc63\ud835\udc57(\ud835\udc43)\n \u2a7d |\ud835\udc38|.\u0394 \u2a7d (|\ud835\udc43|+|\ud835\udc38|).\u0394. \ne. It is clear that \ud835\udc56\ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc36)  \u2a7e \ud835\udc5a\ud835\udc4e\ud835\udc65{\ud835\udc63\ud835\udc58(\ud835\udc36) | \ud835\udc4e\ud835\udc58 \uf0ce \ud835\udc36}  \u2a7e \n\u2211\n\ud835\udc4e\ud835\udc58 \uf0ce \ud835\udc36 \ud835\udc63\ud835\udc58\n(\ud835\udc36) / |\ud835\udc36| = \ud835\udc4e\ud835\udc62(\ud835\udc36). \nMoreover, \ud835\udc4e\ud835\udc62\ud835\udc62\ud835\udc4f(\ud835\udc36)  \u2a7e \u2211\n\ud835\udc61\ud835\udc56 \uf0ce \uf072(\ud835\udc36) \ud835\udc5e\u2032\ud835\udc56\ud835\udc57\n = \ud835\udc63\ud835\udc57(\ud835\udc36) , \u2200\ud835\udc57 \u2a7e  1 . \nHence, \ud835\udc4e\ud835\udc62\ud835\udc62\ud835\udc4f(\ud835\udc36)  \u2a7e \ud835\udc5a\ud835\udc4e\ud835\udc65{\ud835\udc63\ud835\udc57(\ud835\udc36) | \ud835\udc57 \u2a7e 1}  = \ud835\udc4e\ud835\udc62\ud835\udc4f1(\ud835\udc36)  \u2a7e \n\ud835\udc4e\ud835\udc62\ud835\udc4f\ud835\udc5a\ud835\udc56\ud835\udc5b\ud835\udc3c\ud835\udc5b\ud835\udc51(\ud835\udc36)(\ud835\udc36) = \ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc36) by Lemma 2.a. Thus, we only \nneed to prove that \ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc36) \u2a7e \ud835\udc56\ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc36). Since {\ud835\udc58 \uf0ce \ud835\udc3d | \ud835\udc58 \u2a7e\n\ud835\udc5a\ud835\udc56\ud835\udc5b\ud835\udc3c\ud835\udc5b\ud835\udc51(\ud835\udc36)} \u2287 {\ud835\udc58 \uf0ce \ud835\udc3d | \ud835\udc4e\ud835\udc58 \uf0ce \ud835\udc36 or \ud835\udc58 > \ud835\udc5a\ud835\udc4e\ud835\udc65\ud835\udc3c\ud835\udc5b\ud835\udc51(\ud835\udc36)}, then \n\ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc36)  \u2a7e \ud835\udc56\ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc36) . Hence, \ud835\udc4e\ud835\udc62\ud835\udc62\ud835\udc4f(\ud835\udc36)  \u2a7e \ud835\udc4e\ud835\udc62\ud835\udc4f1(\ud835\udc36)  \u2a7e \n\ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc36) \u2a7e \ud835\udc56\ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc36) \u2a7e \ud835\udc4e\ud835\udc62(\ud835\udc36).  \nf. By the definition of \ud835\udc59\ud835\udc4e\ud835\udc62\ud835\udc4f, \ud835\udc4e\ud835\udc62(\ud835\udc36) \u2a7d \ud835\udc59\ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc36). The remain-\ning assertion is shown below.   \n \n         \uf07f \nExample 2 (\ud835\udc59\ud835\udc4e\ud835\udc62\ud835\udc4f and \ud835\udc56\ud835\udc4e\ud835\udc62\ud835\udc4f are incomparable). Consider two \nitemsets \ud835\udc34 = \ud835\udc4f  and \ud835\udc35 = \ud835\udc4f\ud835\udc51 , then \ud835\udc59\ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc34) = 1390  > \n\ud835\udc4e\ud835\udc62\ud835\udc62\ud835\udc4f(\ud835\udc34) =  \ud835\udc4e\ud835\udc62\ud835\udc4f1(\ud835\udc34) =  \ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc34) =  \ud835\udc56\ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc34) =  \ud835\udc4e\ud835\udc62(\ud835\udc34)  = \n1120 and \ud835\udc56\ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc35) = 800 > \ud835\udc59\ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc35) = 430 > \ud835\udc4e\ud835\udc62(\ud835\udc35) = \n409.  \nThus, \ud835\udc59\ud835\udc4e\ud835\udc62\ud835\udc4f (satisfying only \ud835\udc9f\ud835\udcab\ud835\udc9e, the weakest \ud835\udc9c\u2133\u2112 cri-\nterion by Proposition 1) and \ud835\udc56\ud835\udc4e\ud835\udc62\ud835\udc4f (satisfying \u2131\u2130\ud835\udc9c\u2133) are \n1041-4347 (c) 2018 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more\ninformation.\nThis article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI\n10.1109/TKDE.2018.2833478, IEEE Transactions on Knowledge and Data Engineering\n6 \nIEEE TRANSACTIONS ON KNOWLEDGE AND DATA ENGINEERING,  MANUSCRIPT ID \n \nincomparable. However, the value of \ud835\udc59\ud835\udc4e\ud835\udc62\ud835\udc4f may be larger \nthan the largest \ud835\udc4e\ud835\udc62\ud835\udc62\ud835\udc4f, \ud835\udc4e\ud835\udc62\ud835\udc4f1 and \ud835\udc4e\ud835\udc62\ud835\udc4f, whereas \ud835\udc56\ud835\udc4e\ud835\udc62\ud835\udc4f is al-\nways tighter than \ud835\udc4e\ud835\udc62\ud835\udc4f. Thus, the amplitude value (the dif-\nference between the minimum and maximum values) of \n\ud835\udc59\ud835\udc4e\ud835\udc62\ud835\udc4f is often greater than that of \ud835\udc56\ud835\udc4e\ud835\udc62\ud835\udc4f. \nHaving studied properties of the four proposed upper-\nbounds and their relationship to previous upper-bounds, \nthe next important problem to solve is how to apply the \nfour proposed UBs for designing efficient pruning strate-\ngies to answer the second question (\ud835\udc442).  \n3.3 Three novel pruning strategies based on the \nproposed UBs \nAlthough \ud835\udc4e\ud835\udc62\ud835\udc4f1 , \ud835\udc4e\ud835\udc62\ud835\udc4f and \ud835\udc56\ud835\udc4e\ud835\udc62\ud835\udc4f are respectively gradually \ntighter UBs on \ud835\udc4e\ud835\udc62, and \ud835\udc3b\ud835\udc34\ud835\udc48\ud835\udc46 \uf0cd \ud835\udc3b\ud835\udc3c\ud835\udc34\ud835\udc48\ud835\udc35 \uf0cd \ud835\udc3b\ud835\udc34\ud835\udc48\ud835\udc35 \u2286 \ud835\udc3b\ud835\udc34\ud835\udc48\ud835\udc351, \neach UB has its own pruning ability or effect. For any UB \n\ud835\udc62\ud835\udc4f, we say that the pruning condition \ud835\udc43\ud835\udc36\ud835\udc62\ud835\udc4f(\ud835\udc43) for a non-\nempty itemset \ud835\udc43 holds iff \ud835\udc62\ud835\udc4f(\ud835\udc43) < \ud835\udc5a\ud835\udc62 (or \ud835\udc43 is low-ub). For \nthe sake of brevity, we denote the set of \ud835\udc43 and all itemset \nextensions of \ud835\udc43 as \ud835\udc4f\ud835\udc5f\ud835\udc4e\ud835\udc5b\ud835\udc50\u210e(\ud835\udc43). Furthermore, the notation \n[\ud835\udc43]  \u225d  {\ud835\udc43\ud835\udc65, \u2026 , \ud835\udc43\ud835\udc66, \u2026 , \ud835\udc43\ud835\udc67, \u2026 }  will denote the equivalence \nclass consisting of all item-extensions of \ud835\udc43 (itemsets having \nthe same prefix \ud835\udc43). Based on these concepts, the search \nspace of HAUIM can be viewed as a prefix-tree, where each \nnode represents an itemset, such that the root is the empty \nset and each child of a node is single item-extension of that \nitemset. These definitions will be used in the proposed \ndHAUIM algorithm, presented in Section 4. Based on The-\norem 1, the three proposed pruning strategies are de-\nscribed next.   \nPruning Strategy 1 (Depth Pruning (DP) strategy w.r.t. \nforward extensions based on  \ud835\udc56\ud835\udc4e\ud835\udc62\ud835\udc4f  and \ud835\udc59\ud835\udc4e\ud835\udc62\ud835\udc4f )  For any non-\nempty itemset \ud835\udc43   if \ud835\udc43\ud835\udc36\ud835\udc56\ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc43)  or \ud835\udc43\ud835\udc36\ud835\udc59\ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc43)  hold  the whole \n\ud835\udc4f\ud835\udc5f\ud835\udc4e\ud835\udc5b\ud835\udc50\u210e(\ud835\udc43) of the search space can be pruned. \nSince \ud835\udc56\ud835\udc4e\ud835\udc62\ud835\udc4f  and \ud835\udc59\ud835\udc4e\ud835\udc62\ud835\udc4f  are incomparable, both of these \nUBs should be used to eliminate unpromising candidate \nbranches of the prefix-tree. \nPruning Strategy 2 (Width Pruning (WP) strategy w.r.t. \nbi-directional extensions on projected databases based on \ud835\udc4e\ud835\udc62\ud835\udc4f). \nFor the second UB \ud835\udc4e\ud835\udc62\ud835\udc4f , which is larger than \ud835\udc56\ud835\udc4e\ud835\udc62\ud835\udc4f , if \n\ud835\udc43\ud835\udc36\ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc45\ud835\udc66) holds for a non-empty itemset \ud835\udc45 and item-exten-\nsion \ud835\udc45\ud835\udc66 in [\ud835\udc45], the itemset \ud835\udc45\ud835\udc66 can be removed from the set \n[\ud835\udc45], i.e. not only the whole \ud835\udc4f\ud835\udc5f\ud835\udc4e\ud835\udc5b\ud835\udc50\u210e(\ud835\udc45\ud835\udc66) is immediately \npruned, \nbut \nalso \nall \nbranches \ud835\udc4f\ud835\udc5f\ud835\udc4e\ud835\udc5b\ud835\udc50\u210e(\ud835\udc45\ud835\udc65\ud835\udc66)  and \n\ud835\udc4f\ud835\udc5f\ud835\udc4e\ud835\udc5b\ud835\udc50\u210e(\ud835\udc45\ud835\udc66\ud835\udc67) are eliminated from the search tree (where \n\ud835\udc45\ud835\udc65\ud835\udc66 and \ud835\udc45\ud835\udc66\ud835\udc67 are respectively the backward and forward \nextensions of \ud835\udc45\ud835\udc66). In other words, such item \ud835\udc66 will not ap-\npear in \ud835\udc4f\ud835\udc5f\ud835\udc4e\ud835\udc5b\ud835\udc50\u210e(\ud835\udc45) and we can remove \ud835\udc66 from the pro-\njected database [16] of \ud835\udc45. \nPruning Strategy 3 (Strong Width Pruning (SWP) strat-\negy on the initial QDB \ud835\udc9f based on \ud835\udc4e\ud835\udc62\ud835\udc4f1). For the \ud835\udc4e\ud835\udc62\ud835\udc4f1 UB, \nwhich is the largest among the four new UBs, if \ud835\udc43\ud835\udc36\ud835\udc4e\ud835\udc62\ud835\udc4f1(\ud835\udc43) \nholds, then \ud835\udc43\ud835\udc36\ud835\udc4e\ud835\udc62\ud835\udc4f1(\ud835\udc36) also holds for all extensions \ud835\udc36 of \ud835\udc43. \nIn particular, for each item \ud835\udc4e\ud835\udc57 of \ud835\udc9c, if \ud835\udc43\ud835\udc36\ud835\udc4e\ud835\udc62\ud835\udc4f1(\ud835\udc4e\ud835\udc57) holds, i.e. \n\ud835\udc4e\ud835\udc62\ud835\udc4f1(\ud835\udc4e\ud835\udc57) < \ud835\udc5a\ud835\udc62, and we can remove \ud835\udc4e\ud835\udc57 from the database \ud835\udc9f \nor delete the \ud835\udc57\ud835\udc61\u210e column (according to \ud835\udc4e\ud835\udc57) of the integrated \nmatrix \ud835\udcac. \nNote that, although \ud835\udc4e\ud835\udc62\ud835\udc4f1 and \ud835\udc4e\ud835\udc62\ud835\udc62\ud835\udc4f have the same SWP \npruning ability, \ud835\udc4e\ud835\udc62\ud835\udc4f1 is tighter than \ud835\udc4e\ud835\udc62\ud835\udc62\ud835\udc4f by Theorem 1.e. \nThus, in terms of value and search space pruning ability, \n\ud835\udc4e\ud835\udc62\ud835\udc4f1 is said to be absolutely better than \ud835\udc4e\ud835\udc62\ud835\udc62\ud835\udc4f. \nObviously, SWP and WP are respectively stronger than \nWP and DP. Although both \ud835\udc4e\ud835\udc62\ud835\udc4f1 and \ud835\udc4e\ud835\udc62\ud835\udc4f have the WP \nability, \ud835\udc4e\ud835\udc62\ud835\udc4f is only used on projected databases for non-\nempty prefixes while \ud835\udc4e\ud835\udc62\ud835\udc4f1 can be additionally applied on \nthe largest initial QDB \ud835\udc9f (according to the empty prefix). \nGenerally, the pruning condition \ud835\udc43\ud835\udc36\ud835\udc62\ud835\udc4f of a looser UB \ud835\udc62\ud835\udc4f \ncan be applied less frequently than a tight upper-bound \ndue to its high overestimation, but it will eliminate much \nmore unpromising candidates if its pruning condition \nholds. Since the pruning ability of the four proposed UBs \nare different, \ud835\udc59\ud835\udc4e\ud835\udc62\ud835\udc4f  and \ud835\udc56\ud835\udc4e\ud835\udc62\ud835\udc4f  are incomparable, the four \nnovel upper-bounds should all be used together to more \nefficiently reduce the search space in HAUIM. Moreover, \none should not be replaced with the others (see Remarks \nabout this in Section 5). \nExample 3 (Pruning ability of the three strategies). The pruning \neffect of strategies 1-3 is illustrated in Fig. 1 for the running \nexample. \nFor \ud835\udc5a\ud835\udc62 = \ud835\udf07 = 900, Fig. 1.a illustrates the SWP and DP \npruning effects of  \ud835\udc4e\ud835\udc62\ud835\udc4f1 and \ud835\udc59\ud835\udc4e\ud835\udc62\ud835\udc4f. Since \ud835\udc4e\ud835\udc62\ud835\udc4f1(\ud835\udc34) < \ud835\udc5a\ud835\udc62, for \nall \ud835\udc34 \u220a {\ud835\udc4e, \ud835\udc50, \ud835\udc51}, by the SWP strategy 3, we can remove all \nitems \ud835\udc4e, \ud835\udc50 and \ud835\udc51 from the QDB \ud835\udc9f (thus, it is unnecessary to \nperform backward extensions of \ud835\udc50 and \ud835\udc51 with \ud835\udc4f to obtain \ud835\udc4f\ud835\udc50 \nand \ud835\udc4f\ud835\udc51). Moreover, because \ud835\udc59\ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc4f\ud835\udc52) < \ud835\udc5a\ud835\udc62 and \ud835\udc59\ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc52) <\n\ud835\udc5a\ud835\udc62 , the whole \ud835\udc4f\ud835\udc5f\ud835\udc4e\ud835\udc5b\ud835\udc50\u210e(\ud835\udc52) and \ud835\udc4f\ud835\udc5f\ud835\udc4e\ud835\udc5b\ud835\udc50\u210e(\ud835\udc4f\ud835\udc52) of the search \ntree are pruned by DP strategy 1. Finally, it is found that \nthere is only one HAU item \ud835\udc4f with \ud835\udc4e\ud835\udc62(\ud835\udc4f) = 1120 \u2a7e \ud835\udc5a\ud835\udc62, \n\ud835\udc3b\ud835\udc34\ud835\udc48\ud835\udc46 = {\ud835\udc4f}.  \nFig. 1.b illustrates the WP and DP effects of \ud835\udc4e\ud835\udc62\ud835\udc4f, \ud835\udc56\ud835\udc4e\ud835\udc62\ud835\udc4f \nand \ud835\udc59\ud835\udc4e\ud835\udc62\ud835\udc4f. For \ud835\udc5a\ud835\udc62 = \ud835\udf07\u2019 = 250, \ud835\udc45 = \ud835\udc4e, \ud835\udc37 \u220a {\ud835\udc50, \ud835\udc51}, we have  \n[\ud835\udc45]  =  {\ud835\udc4e\ud835\udc4f, \ud835\udc4e\ud835\udc50, \ud835\udc4e\ud835\udc51, \ud835\udc4e\ud835\udc52}  and \ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc34) < \ud835\udc5a\ud835\udc62  for \ud835\udc34 = \ud835\udc45 \u2a01 \ud835\udc37 \u220a\n{\ud835\udc4e\ud835\udc50, \ud835\udc4e\ud835\udc51} which have the same non-empty prefix \ud835\udc4e. Thus, we \ncan apply the WP strategy for such \ud835\udc34, i.e. not only all for-\nward \nextensions \nof \ud835\udc34  (composed \nof \ud835\udc4f\ud835\udc5f\ud835\udc4e\ud835\udc5b\ud835\udc50\u210e(\ud835\udc4e\ud835\udc50\ud835\udc51), \n\ud835\udc4f\ud835\udc5f\ud835\udc4e\ud835\udc5b\ud835\udc50\u210e(\ud835\udc4e\ud835\udc50\ud835\udc52) and \ud835\udc4f\ud835\udc5f\ud835\udc4e\ud835\udc5b\ud835\udc50\u210e(\ud835\udc4e\ud835\udc51\ud835\udc52)) in \ud835\udc4f\ud835\udc5f\ud835\udc4e\ud835\udc5b\ud835\udc50\u210e(\ud835\udc34) can be deeply \npruned, but also all its backward extensions (including \n\ud835\udc4f\ud835\udc5f\ud835\udc4e\ud835\udc5b\ud835\udc50\u210e(\ud835\udc4e\ud835\udc4f\ud835\udc50) and \ud835\udc4f\ud835\udc5f\ud835\udc4e\ud835\udc5b\ud835\udc50\u210e(\ud835\udc4e\ud835\udc4f\ud835\udc51)). In other words, \ud835\udc4e\ud835\udc50 and \ud835\udc4e\ud835\udc51 \ncan be eliminated from [\ud835\udc45], that is [\ud835\udc45] = {\ud835\udc4e\ud835\udc4f, \ud835\udc4e\ud835\udc52}, or equiv-\nalently \ud835\udc50 and \ud835\udc51 can be removed from the projected data-\nbase of \ud835\udc4e. However, for items \ud835\udc4f and \ud835\udc51, which have the \nsame empty prefix, \ud835\udc56\ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc51) = \ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc51) = 28 < \ud835\udc5a\ud835\udc62. Hence, \nfor the item \ud835\udc51, only the \ud835\udc4f\ud835\udc5f\ud835\udc4e\ud835\udc5b\ud835\udc50\u210e(\ud835\udc51) can be deeply pruned (re-\nmoved by DP), but we cannot apply the WP and SWP \nstrategies because \ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc4f\ud835\udc51) = \ud835\udc56\ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc4f\ud835\udc51) = 800 > \ud835\udc4e\ud835\udc62(\ud835\udc4f\ud835\udc51) = \n409 > \ud835\udc5a\ud835\udc62. Thus, \ud835\udc4f\ud835\udc51 \u220a \ud835\udc3b\ud835\udc34\ud835\udc48\ud835\udc46, i.e. its backward extension \ud835\udc4f\ud835\udc51 \ncannot be pruned and we cannot delete \ud835\udc51 from \ud835\udc9f. Thus, \nthe WP effect of the tighter \ud835\udc4e\ud835\udc62\ud835\udc4f UB is strictly weaker than \nthe SWP effect of the larger \ud835\udc4e\ud835\udc62\ud835\udc4f1 UB. Furthermore, con-\nsider the DP effect of  \ud835\udc56\ud835\udc4e\ud835\udc62\ud835\udc4f  for \ud835\udc5a\ud835\udc62 = \ud835\udf07\u2032\u2032 = 75 . Since \n\ud835\udc56\ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc34) < \ud835\udc5a\ud835\udc62 but \ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc34) \u2a7e \ud835\udc5a\ud835\udc62 for all \ud835\udc34 \u220a {\ud835\udc4e\ud835\udc50, \ud835\udc4e\ud835\udc51}, only \nforward extensions in \ud835\udc4f\ud835\udc5f\ud835\udc4e\ud835\udc5b\ud835\udc50\u210e(\ud835\udc34) can be deeply pruned. The \nbackward extension \ud835\udc4f\ud835\udc5f\ud835\udc4e\ud835\udc5b\ud835\udc50\u210e(\ud835\udc35) of \ud835\udc34  where \ud835\udc35 \u220a {\ud835\udc4e\ud835\udc4f\ud835\udc50, \ud835\udc4e\ud835\udc4f\ud835\udc51} \ncannot be pruned because \ud835\udc4e\ud835\udc62(\ud835\udc35) \u2a7e \ud835\udc5a\ud835\udc62. Since \ud835\udc59\ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc4e\ud835\udc50) > \n\ud835\udc5a\ud835\udc62 > \ud835\udc56\ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc4e\ud835\udc50), the \ud835\udc4f\ud835\udc5f\ud835\udc4e\ud835\udc5b\ud835\udc50\u210e(\ud835\udc4e\ud835\udc50) can be pruned by \ud835\udc56\ud835\udc4e\ud835\udc62\ud835\udc4f, but \nnot by \ud835\udc59\ud835\udc4e\ud835\udc62\ud835\udc4f. On the other hand, for \ud835\udc5a\ud835\udc62 = \ud835\udf07\u2019\u2019\u2019 = 55, the \n1041-4347 (c) 2018 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more\ninformation.\nThis article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI\n10.1109/TKDE.2018.2833478, IEEE Transactions on Knowledge and Data Engineering\nTIN TRUONG ET AL.:  EFFICIENT VERTICAL MINING OF HIGH AVERAGE-UTILITY ITEMSETS BASED ON NOVEL UPPER-BOUNDS \n7 \n \n\ud835\udc4f\ud835\udc5f\ud835\udc4e\ud835\udc5b\ud835\udc50\u210e(\ud835\udc4e\ud835\udc51) is deeply pruned by \ud835\udc59\ud835\udc4e\ud835\udc62\ud835\udc4f but not by \ud835\udc56\ud835\udc4e\ud835\udc62\ud835\udc4f, be-\ncause \ud835\udc59\ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc4e\ud835\udc51) < \ud835\udc5a\ud835\udc62 < \ud835\udc56\ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc4e\ud835\udc51). In other words, \ud835\udc59\ud835\udc4e\ud835\udc62\ud835\udc4f \nand \ud835\udc56\ud835\udc4e\ud835\udc62\ud835\udc4f  are incomparable, thus both \ud835\udc59\ud835\udc4e\ud835\udc62\ud835\udc4f  and \ud835\udc56\ud835\udc4e\ud835\udc62\ud835\udc4f \nshould be used to more efficiently prune branches of the \nprefix search tree.  \nFrom a theoretical perspective, it is also relevant to com-\npare the four proposed UBs with the previous UBs, \ud835\udc4e\ud835\udc62\ud835\udc62\ud835\udc4f \n[16], \ud835\udc5f\ud835\udc61\ud835\udc62\ud835\udc4f  and \ud835\udc59\ud835\udc62\ud835\udc4f  [18], \ud835\udc59\ud835\udc62\ud835\udc4f\ud835\udc4e\ud835\udc62  and \ud835\udc61\ud835\udc62\ud835\udc4f\ud835\udc4e\ud835\udc62  [19], and \ud835\udc5a\ud835\udc4e\ud835\udc62 \n[20]. \nDefinition 6 (\ud835\udc59\ud835\udc62\ud835\udc4f\ud835\udc4e\ud835\udc62, \ud835\udc61\ud835\udc62\ud835\udc4f\ud835\udc4e\ud835\udc62 [19] and \ud835\udc59\ud835\udc62\ud835\udc4f [18] UBs). Let there \nbe an itemset \ud835\udc34 \uf0ce \u2110\ud835\udcae . Assume that items {\ud835\udc4e\ud835\udc57, \ud835\udc57 \uf0ce \ud835\udc3d}  are \nsorted in descending order w.r.t. \ud835\udc62(\ud835\udc4e\ud835\udc57). Then: \na. the lower-upper-bound average-utility of \ud835\udc34 is denoted and \ndefined as \ud835\udc59\ud835\udc62\ud835\udc4f\ud835\udc4e\ud835\udc62(\ud835\udc34) \u225d \u2211\n\ud835\udc4e\ud835\udc57 \uf0ce \ud835\udc34 \ud835\udc62(\ud835\udc4e\ud835\udc57)\n / |\ud835\udc34|; \nb. the tighter-upper-bound average-utility of \ud835\udc34 is denoted and \ndefined as \ud835\udc61\ud835\udc62\ud835\udc4f\ud835\udc4e\ud835\udc62(\ud835\udc34) \u225d [\ud835\udc62(\ud835\udc35) +  \ud835\udc62(\ud835\udc4e\ud835\udc56\ud835\udc58+1)] / 2 , where \n\ud835\udc35 = {\ud835\udc4e\ud835\udc561, \ud835\udc4e\ud835\udc562, \u2026 , \ud835\udc4e\ud835\udc56\ud835\udc58} and \ud835\udc34 =  \ud835\udc35 \u222a {\ud835\udc4e\ud835\udc56\ud835\udc58+1}. \nc. the looser upper-bound of \ud835\udc34 is denoted and defined as \ud835\udc59\ud835\udc62\ud835\udc4f(\ud835\udc34) \n\u225d \ud835\udc4e\ud835\udc62(\ud835\udc34) + \ud835\udc5f\ud835\udc52\ud835\udc5a\ud835\udc62(\ud835\udc34), where items {\ud835\udc4e\ud835\udc57, \ud835\udc57 \uf0ce \ud835\udc3d} are assumed to \nbe sorted in ascending order w.r.t. \ud835\udc4e\ud835\udc62\ud835\udc62\ud835\udc4f(\ud835\udc4e\ud835\udc57) and \ud835\udc5f\ud835\udc52\ud835\udc5a\ud835\udc62(\ud835\udc34) \n\u225d \u2211\n\ud835\udc5a\ud835\udc4e\ud835\udc65{\ud835\udc5e\u2032\n\ud835\udc56\ud835\udc57,\n\ud835\udc61\ud835\udc56 \uf0ce \uf072(\ud835\udc34)\n \ud835\udc57 > \ud835\udc5a\ud835\udc4e\ud835\udc65\ud835\udc3c\ud835\udc5b\ud835\udc51(\ud835\udc34)}. \nDefinition 7 (\ud835\udc5a\ud835\udc4e\ud835\udc62 measure [20]). Let \ud835\udc34 = \ud835\udc43\ud835\udc4e\ud835\udc5a be an itemset \nin \u2110\ud835\udcae. Assume that items {\ud835\udc4e\ud835\udc57, \ud835\udc57 \uf0ce \ud835\udc3d} are sorted in ascending \norder w.r.t. \ud835\udc4e\ud835\udc62\ud835\udc62\ud835\udc4f(\ud835\udc4e\ud835\udc57). Then, the maximum item utility of re-\nmaining items according to A is defined and denoted as \n\ud835\udc5a\ud835\udc4e\ud835\udc62(\ud835\udc34) \u225d \u2211\n\ud835\udc61\ud835\udc56\uf0ce\ud835\udf0c(\ud835\udc34) \ud835\udc5a\ud835\udc4e\ud835\udc62(\ud835\udc34, \ud835\udc61\ud835\udc56)\n, where  \n\ud835\udc5a\ud835\udc4e\ud835\udc62(\ud835\udc34, \ud835\udc61\ud835\udc56) \u225d\n{\n \n \n \n \ud835\udc62(\ud835\udc34, \ud835\udc61\ud835\udc56) + \ud835\udc5a\ud835\udc62(\ud835\udc34, \ud835\udc61\ud835\udc56) \u00d7 \ud835\udc5a\ud835\udc5b(\ud835\udc34)\n|\ud835\udc34| + \ud835\udc5a\ud835\udc5b(\ud835\udc34)\n, \ud835\udc56\ud835\udc53 \ud835\udc5a\ud835\udc62(\ud835\udc34, \ud835\udc61\ud835\udc56) > \ud835\udc4e\ud835\udc62(\ud835\udc34, \ud835\udc61\ud835\udc56)\n\ud835\udc62(\ud835\udc34, \ud835\udc61\ud835\udc56) + \ud835\udc5a\ud835\udc62(\ud835\udc34, \ud835\udc61\ud835\udc56)\n|\ud835\udc34| + 1\n,\n\ud835\udc56\ud835\udc53 0 < \ud835\udc5a\ud835\udc62(\ud835\udc34, \ud835\udc61\ud835\udc56) \u2a7d \ud835\udc4e\ud835\udc62(\ud835\udc34, \ud835\udc61\ud835\udc56)\n0,                                             \ud835\udc56\ud835\udc53 \ud835\udc5a\ud835\udc62(\ud835\udc34, \ud835\udc61\ud835\udc56) = 0                       \n \n\ud835\udc5a\ud835\udc62(\ud835\udc34, \ud835\udc61\ud835\udc56) \u225d \ud835\udc5a\ud835\udc4e\ud835\udc65{\ud835\udc62(\ud835\udc4e, \ud835\udc61\ud835\udc56)| \ud835\udc4e \u220a \ud835\udc61\ud835\udc56, \ud835\udc4e \u227b \ud835\udc4e\ud835\udc5a} , \ud835\udc5b(\ud835\udc4e\ud835\udc5a, \ud835\udc61\ud835\udc56) \u225d\n|{\ud835\udc4e\ud835\udc58\uf0ce\ud835\udc61\ud835\udc56| \ud835\udc58>m}| and \ud835\udc5a\ud835\udc5b(\ud835\udc34) \u225d \ud835\udc5a\ud835\udc4e\ud835\udc65{\ud835\udc5b(\ud835\udc4e\ud835\udc5a, \ud835\udc61\ud835\udc56) | \ud835\udc61\ud835\udc56\uf0ce\ud835\udf0c(\ud835\udc34)}. \nDiscussion about the pruning effects of the previous \n\ud835\udc82\ud835\udc96\ud835\udc96\ud835\udc83, \ud835\udc8d\ud835\udc96\ud835\udc83\ud835\udc82\ud835\udc96, \ud835\udc95\ud835\udc96\ud835\udc83\ud835\udc82\ud835\udc96, \ud835\udc93\ud835\udc95\ud835\udc96\ud835\udc83, \ud835\udc8d\ud835\udc96\ud835\udc83 and \ud835\udc8e\ud835\udc82\ud835\udc96 UBs. \n(i). The new UB \ud835\udc59\ud835\udc4e\ud835\udc62\ud835\udc4f is tighter than \ud835\udc59\ud835\udc62\ud835\udc4f. Indeed, since for \nany \ud835\udc58 > \ud835\udc5a, \ud835\udc63\ud835\udc58(\ud835\udc34) = \u2211\n\ud835\udc61\ud835\udc56 \u2208 \ud835\udf0c(\ud835\udc34) \ud835\udc5e\u2032\ud835\udc56\ud835\udc58\n \u2a7d \u2211\n\ud835\udc61\ud835\udc56 \uf0ce \uf072(\ud835\udc34) \ud835\udc5a\ud835\udc4e\ud835\udc65{\ud835\udc5e\u2032\ud835\udc56\ud835\udc58, \ud835\udc58 >\n\ud835\udc5a}  =  \ud835\udc5f\ud835\udc52\ud835\udc5a\ud835\udc62(\ud835\udc34) , it follows that \ud835\udc5a\ud835\udc4e\ud835\udc65{\ud835\udc63\ud835\udc58(\ud835\udc34) | \ud835\udc58 > \ud835\udc5a}  \u2a7d \n\ud835\udc5f\ud835\udc52\ud835\udc5a\ud835\udc62(\ud835\udc34), and thus \ud835\udc59\ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc34) \u2a7d \ud835\udc59\ud835\udc62\ud835\udc4f(\ud835\udc34). \n(ii). The proposed \ud835\udc4e\ud835\udc62\ud835\udc4f1, \ud835\udc4e\ud835\udc62\ud835\udc4f and \ud835\udc56\ud835\udc4e\ud835\udc62\ud835\udc4f UBs are tighter \nthan \ud835\udc4e\ud835\udc62\ud835\udc62\ud835\udc4f (by Theorem 1.e). However, the \ud835\udc59\ud835\udc62\ud835\udc4f\ud835\udc4e\ud835\udc62, \ud835\udc61\ud835\udc62\ud835\udc4f\ud835\udc4e\ud835\udc62, \n\ud835\udc59\ud835\udc62\ud835\udc4f and \ud835\udc59\ud835\udc4e\ud835\udc62\ud835\udc4f UBs are not tighter than \ud835\udc4e\ud835\udc62\ud835\udc62\ud835\udc4f, as they may \nproduce values that are greater than \ud835\udc4e\ud835\udc62\ud835\udc62\ud835\udc4f for some item-\nset, i.e. \u2203\ud835\udc34: \ud835\udc4e\ud835\udc62\ud835\udc62\ud835\udc4f(\ud835\udc34) < \ud835\udc62\ud835\udc4f(\ud835\udc34). Thus, the \ud835\udc59\ud835\udc62\ud835\udc4f\ud835\udc4e\ud835\udc62, \ud835\udc61\ud835\udc62\ud835\udc4f\ud835\udc4e\ud835\udc62, \ud835\udc59\ud835\udc4e\ud835\udc62\ud835\udc4f \nand \ud835\udc59\ud835\udc62\ud835\udc4f UBs are said to be less stable than the three UBs \n\ud835\udc4e\ud835\udc62\ud835\udc4f1, \ud835\udc4e\ud835\udc62\ud835\udc4f and \ud835\udc56\ud835\udc4e\ud835\udc62\ud835\udc4f because their amplitude can vary more \nwidely. Moreover, \ud835\udc59\ud835\udc62\ud835\udc4f\ud835\udc4e\ud835\udc62, \ud835\udc61\ud835\udc62\ud835\udc4f\ud835\udc4e\ud835\udc62 and \ud835\udc59\ud835\udc62\ud835\udc4f are incompara-\nble; \ud835\udc59\ud835\udc62\ud835\udc4f\ud835\udc4e\ud835\udc62, \ud835\udc61\ud835\udc62\ud835\udc4f\ud835\udc4e\ud835\udc62 and \ud835\udc59\ud835\udc4e\ud835\udc62\ud835\udc4f are also incomparable.  \nThis is illustrated with an example. Consider the inte-\ngrated QDB \ud835\udc9f\u2032 = {\ud835\udc611 = ((\ud835\udc4e, 100)(\ud835\udc50, 2)(\ud835\udc51, 6)(\ud835\udc52, 400)(\ud835\udc53, 200)(\u210e, \n5), \ud835\udc612 = ((\ud835\udc4e, 1)(\ud835\udc4f, 40)(\ud835\udc50, 3)(\ud835\udc51, 50)(\ud835\udc53, 50)(\ud835\udc54, 10)(\u210e, 4)} and the \nitemsets \ud835\udc34 = \ud835\udc4e\ud835\udc50, \ud835\udc36 = \ud835\udc4e\ud835\udc4f\ud835\udc50, and \ud835\udc37 = \ud835\udc4e\ud835\udc50\ud835\udc51. It is found that \n\ud835\udc4e\ud835\udc62(\ud835\udc34)  = 53 = \ud835\udc61\ud835\udc62\ud835\udc4f\ud835\udc4e\ud835\udc62(\ud835\udc34) = \ud835\udc59\ud835\udc62\ud835\udc4f\ud835\udc4e\ud835\udc62(\ud835\udc34) <  \ud835\udc56\ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc34)  = 400 \u2a7d \n\ud835\udc4e\ud835\udc62\ud835\udc4f\n\u0305\u0305\u0305\u0305\u0305(\ud835\udc34) = \ud835\udc4e\ud835\udc62\ud835\udc4f\n\u0305\u0305\u0305\u0305\u03051(\ud835\udc34) = 400 < \ud835\udc4e\ud835\udc62\ud835\udc62\ud835\udc4f(\ud835\udc34) = 450 < \ud835\udc59\ud835\udc4e\ud835\udc62\ud835\udc4f\n\u0305\u0305\u0305\u0305\u0305\u0305(\ud835\udc34) = 453 \n< \ud835\udc59\ud835\udc62\ud835\udc4f(\ud835\udc34) = 503. Moreover, \ud835\udc61\ud835\udc62\ud835\udc4f\ud835\udc4e\ud835\udc62(\ud835\udc36) = [(41 + 5)] / 2 = 23 < \n\ud835\udc59\ud835\udc62\ud835\udc4f\ud835\udc4e\ud835\udc62(\ud835\udc36) = (101 + 40 + 5) / 3 = 146/3, but \ud835\udc61\ud835\udc62\ud835\udc4f\ud835\udc4e\ud835\udc62(\ud835\udc37) = [(106 \n+ 56)] / 2 = 81 > \ud835\udc59\ud835\udc62\ud835\udc4f\ud835\udc4e\ud835\udc62(\ud835\udc37) = (101 + 5 + 56) / 3 = 54. Con-\nsider another integrated QDB \ud835\udc9f\u2032 = {\ud835\udc611 = {(\ud835\udc4e1, 6), (\ud835\udc4e2, 3)}, \ud835\udc612 \n= {(\ud835\udc4e1, 11)}} and the itemset \ud835\udc34 = {\ud835\udc4e1, \ud835\udc4e2}. It is found that \n\ud835\udf0c(\ud835\udc34) = {\ud835\udc611}, and \ud835\udc59\ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc34) = \ud835\udc59\ud835\udc62\ud835\udc4f(\ud835\udc34) = 4.5 < \ud835\udc4e\ud835\udc62\ud835\udc62\ud835\udc4f(\ud835\udc34) = 6 < \n\ud835\udc61\ud835\udc62\ud835\udc4f\ud835\udc4e\ud835\udc62(\ud835\udc34) = \ud835\udc59\ud835\udc62\ud835\udc4f\ud835\udc4e\ud835\udc62(\ud835\udc34) = [\ud835\udc62(\ud835\udc4e1) + \ud835\udc62(\ud835\udc4e2)] / 2 = 10. \n(iii). As stated in [18], [19], the three \ud835\udc59\ud835\udc62\ud835\udc4f\ud835\udc4e\ud835\udc62, \ud835\udc61\ud835\udc62\ud835\udc4f\ud835\udc4e\ud835\udc62 and \n\ud835\udc59\ud835\udc62\ud835\udc4f UBs satisfy the pruning condition \ud835\udc9f\ud835\udcab\ud835\udc9e, the weakest \n\ud835\udc9c\u2133\u2112 criterion, under the following condition: all items \ud835\udc4e\ud835\udc57 \nmust be sorted in descending order w.r.t. the utility \ud835\udc62(\ud835\udc4e\ud835\udc57) \nfor \ud835\udc59\ud835\udc62\ud835\udc4f\ud835\udc4e\ud835\udc62  and \ud835\udc61\ud835\udc62\ud835\udc4f\ud835\udc4e\ud835\udc62 , and in ascending order w.r.t. the \n\ud835\udc4e\ud835\udc62\ud835\udc62\ud835\udc4f(\ud835\udc4e\ud835\udc57) for \ud835\udc59\ud835\udc62\ud835\udc4f. Thus, \ud835\udc59\ud835\udc62\ud835\udc4f\ud835\udc4e\ud835\udc62, \ud835\udc61\ud835\udc62\ud835\udc4f\ud835\udc4e\ud835\udc62 and \ud835\udc59\ud835\udc62\ud835\udc4f are sensitive \nto the sorting order of items. This leads to difficulties when \nthey need to be used simultaneously to prune unpromising \nitemsets. \n (iv). Moreover, note that \ud835\udc59\ud835\udc62\ud835\udc4f\ud835\udc4e\ud835\udc62  does not satisfy the \n\u212c\ud835\udc56\ud835\udc9f\u2130\ud835\udc9c\u2133  and \ud835\udc9c\u2133  properties, and that the \ud835\udc61\ud835\udc62\ud835\udc4f\ud835\udc4e\ud835\udc62 , \ud835\udc59\ud835\udc62\ud835\udc4f \nand \ud835\udc59\ud835\udc4e\ud835\udc62\ud835\udc4f\n\u0305\u0305\u0305\u0305\u0305\u0305 UBs do not satisfy the stronger \ud835\udc9c\u2133, \u212c\ud835\udc56\ud835\udc9f\u2130\ud835\udc9c\u2133 \nand \u2131\u2130\ud835\udc9c\u2133 properties. These UBs can produce high over-\nestimation of the average utility and as a result, the width \npruning strategies 2-3 cannot be used for these UBs. \n(v). In the projected database of each itemset \ud835\udc45 (PDB(\ud835\udc45)) \n[16], if \u2203\ud835\udc66 = \ud835\udc4e\ud835\udc56 \u227b \ud835\udc45: \ud835\udc4e\ud835\udc62\ud835\udc62\ud835\udc4f(\ud835\udc45\ud835\udc66) < \ud835\udc5a\ud835\udc62, then we can remove \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \nFig. 1. Illustration of pruning strategies - (a) each node [\ud835\udc68] \ud835\udc8d\ud835\udc82\ud835\udc96\ud835\udc83(\ud835\udc68),\ud835\udc82\ud835\udc96(\ud835\udc68)\n\ud835\udc82\ud835\udc96\ud835\udc83\ud835\udfcf(\ud835\udc68)\n is considered for pruning with strategies 3 and 1 for mu = \ud835\udf41 = 900; \n(b) each node [\ud835\udc68]\ud835\udc8a\ud835\udc82\ud835\udc96\ud835\udc83(\ud835\udc68),\ud835\udc82\ud835\udc96(\ud835\udc68)\n\ud835\udc82\ud835\udc96\ud835\udc83(\ud835\udc68),\ud835\udc8d\ud835\udc82\ud835\udc96\ud835\udc83(\ud835\udc68) is considered for pruning with strategy 2 for mu = \ud835\udf41\u2019 = 250 and strategy 1 with mu = \ud835\udf41\u2032\u2032 = 75.  \n\u220e[\ud835\udc34]: \ud835\udc5d\ud835\udc5f\ud835\udc62\ud835\udc5b\ud835\udc52\ud835\udc51 \ud835\udc5b\ud835\udc5c\ud835\udc51\ud835\udc52 \ud835\udc34 \ud835\udc4f\ud835\udc66 \ud835\udc4e\ud835\udc62 (< \ud835\udc5a\ud835\udc62).   \n\u229d [\ud835\udc34]             \u2236 \ud835\udc51\ud835\udc52\ud835\udc52\ud835\udc5d\ud835\udc59\ud835\udc66 \ud835\udc5d\ud835\udc5f\ud835\udc62\ud835\udc5b\ud835\udc52\ud835\udc51 \ud835\udc4f\ud835\udc5f\ud835\udc4e\ud835\udc5b\ud835\udc50\u210e(\ud835\udc34) \ud835\udc4f\ud835\udc66 \ud835\udc59\ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc34) \ud835\udc5c\ud835\udc5f \ud835\udc56\ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc34), \ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc34), \ud835\udc4e\ud835\udc62\ud835\udc4f1(\ud835\udc34). \n\uf06c[\ud835\udc45\ud835\udc65\ud835\udc66]                   [\ud835\udc45\ud835\udc66]: \ud835\udc5d\ud835\udc5f\ud835\udc62\ud835\udc5b\ud835\udc52\ud835\udc51 \ud835\udc4f\ud835\udc4e\ud835\udc50\ud835\udc58\ud835\udc64\ud835\udc4e\ud835\udc5f\ud835\udc51 \ud835\udc52\ud835\udc65\ud835\udc61\ud835\udc52\ud835\udc5b\ud835\udc61\ud835\udc56\ud835\udc5c\ud835\udc5b \ud835\udc4f\ud835\udc5f\ud835\udc4e\ud835\udc5b\ud835\udc50\u210e(\ud835\udc45\ud835\udc65\ud835\udc66) \ud835\udc5c\ud835\udc53 \ud835\udc45\ud835\udc66 \ud835\udc4f\ud835\udc66 \ud835\udc4e\ud835\udc62\ud835\udc4f1(\ud835\udc45\ud835\udc66) \ud835\udc5c\ud835\udc5f \ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc45\ud835\udc66).  \n\u229d [\ud835\udc4e]650,90\n560<\ud835\udf41  [\ud835\udc4f]1390,1120\n1120\n  \u229d [\ud835\udc50]344,320\n800<\ud835\udf41   \u229d [\ud835\udc51]53,28\n800<\ud835\udf41  \u220e[\ud835\udc52]31<\ud835\udf41,31\n1120\n  \n\uf06c[\ud835\udc4f\ud835\udc50]556,535\n800\n  \uf06c[\ud835\udc4f\ud835\udc51]430,409\n800\n  \u229d [\ud835\udc4f\ud835\udc52]573.5<\ud835\udf41,573.5\n1120,\n  \n\u229d [\ud835\udc4e\ud835\udc4f]324,304\n560\n  \u229d [\ud835\udc4e\ud835\udc50]78,68\n240   \n\uf0c6 \n(a) \n \n\uf0c6 \n[\ud835\udc4e]560,90\n560,650  \n [\ud835\udc50]320,320\n320,344  \n[\ud835\udc4f]1120,1120\n1120,1390  \n\u220e[\ud835\udc52]31<\ud835\udf41\u2032\u2032,31\n1120,31  \n\u229d [\ud835\udc51]28,28\n28<\ud835\udf41\u2032,53  \n\u2026  \n[\ud835\udc4f\ud835\udc51]800,409>\ud835\udf41\u2032 \n800,430\n \n\u229d [\ud835\udc4e\ud835\udc50]70<\ud835\udf41\u2032\u2032,68 \n240<\ud835\udf41\u2032,78 \u229d [\ud835\udc4e\ud835\udc51]72<\ud835\udf41\u2032\u2032,43 \n240<\ud835\udf41\u2032,53 \n[\ud835\udc4e\ud835\udc4f]560,304 \n560,324  \n \n\uf06c[\ud835\udc4e\ud835\udc4f\ud835\udc50]240,97\n240,102 \n \n\uf06c[\ud835\udc4e\ud835\udc4f\ud835\udc51]240,91\n240,97 \n \n[\ud835\udc4e\ud835\udc4f\ud835\udc52]560,207 \n560,207  \n \n\u229d [\ud835\udc4e\ud835\udc50\ud835\udc51]70,49 \n240,56 \n \n\u229d [\ud835\udc4e\ud835\udc50\ud835\udc52]70,48 \n240,48 \n \n\u229d [\ud835\udc4e\ud835\udc51\ud835\udc52]72,32 \n240,32 \n \n(b) \n \n\u2026  \n\u2026  \n\u2026  \n1041-4347 (c) 2018 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more\ninformation.\nThis article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI\n10.1109/TKDE.2018.2833478, IEEE Transactions on Knowledge and Data Engineering\n8 \nIEEE TRANSACTIONS ON KNOWLEDGE AND DATA ENGINEERING,  MANUSCRIPT ID \n \n\ud835\udc66 from PDB(\ud835\udc45) and update \ud835\udc4e\ud835\udc62\ud835\udc62\ud835\udc4f to obtain the tighter UB \n\ud835\udc5f\ud835\udc61\ud835\udc62\ud835\udc4f  [18] as follows. For any itemset \ud835\udc36 = \ud835\udc45 \u2a01 \ud835\udc38 , then \n\ud835\udc5f\ud835\udc61\ud835\udc62\ud835\udc4f(\ud835\udc36)\n \u225d \n\u2211\n\ud835\udc5a\ud835\udc4e\ud835\udc65{\ud835\udc5e\u2032\n\ud835\udc58\ud835\udc57 |  \ud835\udc57 \u2a7e 1 and \ud835\udc57 \u2260 \ud835\udc56}\n\ud835\udc61\ud835\udc58\u220a\ud835\udf0c(\ud835\udc36)\n \u2a7d \n\u2211\n\ud835\udc61\ud835\udc58\u220a\ud835\udf0c(\ud835\udc36) \ud835\udc5a\ud835\udc4e\ud835\udc65{\ud835\udc5e\u2032\ud835\udc58\ud835\udc57 | \ud835\udc57 \u2a7e 1}\n \u225d \ud835\udc4e\ud835\udc62\ud835\udc62\ud835\udc4f(\ud835\udc36). Since \ud835\udc4e\ud835\udc62\ud835\udc62\ud835\udc4f and \ud835\udc5f\ud835\udc61\ud835\udc62\ud835\udc4f \nare created using the horizontal form, this update requires \nperforming additional PDB or pseudo-PDB scans to com-\npute the new \ud835\udc5a\ud835\udc4e\ud835\udc65{\ud835\udc5e\ud835\udc58\ud835\udc57\n\u2032  |  \ud835\udc57 \u2a7e 1 and \ud835\udc57 \u2260 \ud835\udc56} values, which is \nvery costly.  \nHowever, for the proposed \ud835\udc4e\ud835\udc62\ud835\udc4f  UB, if \u2203\ud835\udc66 = \ud835\udc4e\ud835\udc56 \u227b \ud835\udc45 : \n\ud835\udc45\ud835\udc66 \u220a [\ud835\udc45] and \ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc45\ud835\udc66) < \ud835\udc5a\ud835\udc62, then we can remove \ud835\udc45\ud835\udc66 from \nthe original equivalence class [\ud835\udc45] to obtain the new re-\nduced class [\ud835\udc45]\u2217 \u2236= [\ud835\udc45] \\ {\ud835\udc45\ud835\udc66} , or equivalently ignore \n(without having to remove) the \ud835\udc56\ud835\udc61\u210e column of the matrix \ud835\udc44 \nto obtain the corresponding reduced \ud835\udc44\u2217 (or \ud835\udc66 is removed \nfrom PDB( \ud835\udc45 )). Then, for any high- \ud835\udc4e\ud835\udc62\ud835\udc4f  itemset \ud835\udc36 =\n\ud835\udc45 \u2a01 \ud835\udc38 obtained by extending itemsets in the new [\ud835\udc45]  \nequivalence class (i.e. \ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc36) \u2a7e \ud835\udc5a\ud835\udc62), the itemset  \ud835\udc36 does \nnot contain \ud835\udc66, values (in the vertical form) of \ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc36) in \ud835\udc44 \nand \ud835\udc44\u2217 are the same, and \ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc36)  \u2a7d \ud835\udc5f\ud835\udc61\ud835\udc62\ud835\udc4f(\ud835\udc36) . In other \nwords, \ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc36) does not need to be updated in the reduced \n\ud835\udc44\u2217matrix but it is always tighter than the tightened \ud835\udc5f\ud835\udc61\ud835\udc62\ud835\udc4f \nUB of \ud835\udc4e\ud835\udc62\ud835\udc62\ud835\udc4f. This is one of the reasons why the dHAUIM \nalgorithm, proposed in this paper, outperforms the state-\nof-the-art EHAUPM algorithm for mining HAUIs. \n(vi). Note that, unlike the \ud835\udc56\ud835\udc4e\ud835\udc62\ud835\udc4f\n\u0305\u0305\u0305\u0305\u0305\u0305 and \ud835\udc59\ud835\udc4e\ud835\udc62\ud835\udc4f\n\u0305\u0305\u0305\u0305\u0305\u0305 UBs, although \n\ud835\udc5a\ud835\udc4e\ud835\udc62(\ud835\udc34) is an UB of all its extensions \ud835\udc36 = \ud835\udc34\u2a01\ud835\udc35 with \ud835\udc35 \u2260 \u2205, \ni.e. \ud835\udc4e\ud835\udc62(\ud835\udc36) \u2a7d \ud835\udc5a\ud835\udc4e\ud835\udc62(\ud835\udc34) [20], \ud835\udc5a\ud835\udc4e\ud835\udc62 is not an UB on \ud835\udc4e\ud835\udc62, i.e. \u2203\ud835\udc34: \n\ud835\udc5a\ud835\udc4e\ud835\udc62(\ud835\udc34) < \ud835\udc4e\ud835\udc62(\ud835\udc34). In general,  \ud835\udc5a\ud835\udc4e\ud835\udc62 is incomparable with \n\ud835\udc56\ud835\udc4e\ud835\udc62\ud835\udc4f\n\u0305\u0305\u0305\u0305\u0305\u0305 and \ud835\udc59\ud835\udc4e\ud835\udc62\ud835\udc4f\n\u0305\u0305\u0305\u0305\u0305\u0305. Indeed, the \ud835\udc4e\ud835\udc62\ud835\udc62\ud835\udc4f values of five items \ud835\udc4e, \ud835\udc4f, \ud835\udc50, \n\ud835\udc51 and \ud835\udc52 are respectively 616, 1120, 850, 856 and 1176. Thus, \ntheir ascending order \u227a w.r.t \ud835\udc4e\ud835\udc62\ud835\udc62\ud835\udc4f is \ud835\udc4e \u227a \ud835\udc50 \u227a \ud835\udc51 \u227a \ud835\udc4f \u227a \ud835\udc52. \nFor \ud835\udc5a\ud835\udc62  = 90, the itemset \ud835\udc34  = \ud835\udc4e\ud835\udc50\ud835\udc4f , \ud835\udc4e\ud835\udc62(\ud835\udc34)  = 290/3 and \n\ud835\udc5a\ud835\udc4e\ud835\udc62(\ud835\udc34) = 74, so \ud835\udc5a\ud835\udc4e\ud835\udc62(\ud835\udc34) < \ud835\udc5a\ud835\udc62 \u2a7d \ud835\udc4e\ud835\udc62(\ud835\udc34). Thus, (\ud835\udc5a\ud835\udc4e\ud835\udc62(\ud835\udc34) < \n\ud835\udc5a\ud835\udc62) cannot be used for pruning \ud835\udc4f\ud835\udc5f\ud835\udc4e\ud835\udc5b\ud835\udc50\u210e(\ud835\udc34). Furthermore, \nfor \ud835\udc5a\ud835\udc62 = 105, branches starting from itemsets \ud835\udc34 and \ud835\udc4e\ud835\udc50\ud835\udc51\ud835\udc52 \ncannot be pruned by the \ud835\udc5a\ud835\udc4e\ud835\udc62 values of their prefixes be-\ncause \ud835\udc5a\ud835\udc4e\ud835\udc62(\ud835\udc4e) = 509.8 > \ud835\udc5a\ud835\udc4e\ud835\udc62(\ud835\udc4e\ud835\udc50) = 554/3 > \ud835\udc5a\ud835\udc4e\ud835\udc62(\ud835\udc4e\ud835\udc50\ud835\udc51) = \n130.05 > \ud835\udc5a\ud835\udc62. Meanwhile, since \ud835\udc59\ud835\udc4e\ud835\udc62\ud835\udc4f\n\u0305\u0305\u0305\u0305\u0305\u0305(\ud835\udc34) = 308/3 < \ud835\udc5a\ud835\udc62, \n\ud835\udc59\ud835\udc4e\ud835\udc62\ud835\udc4f\n\u0305\u0305\u0305\u0305\u0305\u0305(\ud835\udc4e\ud835\udc50\ud835\udc51\ud835\udc52) = 38.25 < \ud835\udc56\ud835\udc4e\ud835\udc62\ud835\udc4f\n\u0305\u0305\u0305\u0305\u0305\u0305(\ud835\udc4e\ud835\udc50\ud835\udc51\ud835\udc52) = 70 < \ud835\udc5a\ud835\udc62, \ud835\udc4f\ud835\udc5f\ud835\udc4e\ud835\udc5b\ud835\udc50\u210e(\ud835\udc34) and \n\ud835\udc4f\ud835\udc5f\ud835\udc4e\ud835\udc5b\ud835\udc50\u210e(\ud835\udc4e\ud835\udc50\ud835\udc51\ud835\udc52) are still pruned by \ud835\udc59\ud835\udc4e\ud835\udc62\ud835\udc4f\n\u0305\u0305\u0305\u0305\u0305\u0305 and/or \ud835\udc56\ud835\udc4e\ud835\udc62\ud835\udc4f\n\u0305\u0305\u0305\u0305\u0305\u0305. \nFinally, although \ud835\udc4e\ud835\udc62\ud835\udc4f1 and \ud835\udc4e\ud835\udc62\ud835\udc62\ud835\udc4f are \ud835\udc9c\u2133, \ud835\udc4e\ud835\udc62\ud835\udc4f and \ud835\udc5f\ud835\udc61\ud835\udc62\ud835\udc4f \nhave the same \u212c\ud835\udc56\ud835\udc9f\u2130\ud835\udc9c\u2133 property, \ud835\udc59\ud835\udc4e\ud835\udc62\ud835\udc4f and \ud835\udc59\ud835\udc62\ud835\udc4f satisfy the \nsame \ud835\udc9f\ud835\udcab\ud835\udc9e, however \ud835\udc59\ud835\udc4e\ud835\udc62\ud835\udc4f, \ud835\udc4e\ud835\udc62\ud835\udc4f and \ud835\udc4e\ud835\udc62\ud835\udc4f1 are respectively \ntighter than \ud835\udc59\ud835\udc62\ud835\udc4f, \ud835\udc5f\ud835\udc61\ud835\udc62\ud835\udc4f and \ud835\udc4e\ud835\udc62\ud835\udc62\ud835\udc4f. Thus, from a theoretical \nperspective, using the new \ud835\udc59\ud835\udc4e\ud835\udc62\ud835\udc4f, \ud835\udc4e\ud835\udc62\ud835\udc4f and \ud835\udc4e\ud835\udc62\ud835\udc4f1  UBs for \nmining HAUIs will be certainly better than using the \ud835\udc59\ud835\udc62\ud835\udc4f, \n\ud835\udc5f\ud835\udc61\ud835\udc62\ud835\udc4f and \ud835\udc4e\ud835\udc62\ud835\udc62\ud835\udc4f UBs used in [18], [19]. In general, \ud835\udc59\ud835\udc4e\ud835\udc62\ud835\udc4f, \ud835\udc56\ud835\udc4e\ud835\udc62\ud835\udc4f \nand \ud835\udc5a\ud835\udc4e\ud835\udc62 are incomparable. \nTo summarize the above discussion, Table 4 compares \nthe proposed \ud835\udc59\ud835\udc4e\ud835\udc62\ud835\udc4f, \ud835\udc56\ud835\udc4e\ud835\udc62\ud835\udc4f, \ud835\udc4e\ud835\udc62\ud835\udc4f, \ud835\udc4e\ud835\udc62\ud835\udc4f1 UBs and previous \ud835\udc59\ud835\udc62\ud835\udc4f, \n\ud835\udc5f\ud835\udc61\ud835\udc62\ud835\udc4f, \ud835\udc59\ud835\udc62\ud835\udc4f\ud835\udc4e\ud835\udc62, \ud835\udc61\ud835\udc62\ud835\udc4f\ud835\udc4e\ud835\udc62, \ud835\udc4e\ud835\udc62\ud835\udc62\ud835\udc4f, \ud835\udc5a\ud835\udc4e\ud835\udc62 UBs in terms of values and \npruning effects. \nHaving shown that the proposed UBs have desirable \nproperties, an interesting question arises, which is how to \ncompute them efficiently. A key issue for computing the \nproposed UBs is how to quickly calculate the column vector \n\ud835\udcb1(\ud835\udc36) of a child node \ud835\udc36 using the vector \ud835\udcb1(\ud835\udc43) of its parent \n\ud835\udc43 in the prefix-tree. Assume that the itemset \ud835\udc36 is obtained \nby joining two itemsets \ud835\udc3f\ud835\udc43 =  \ud835\udc43\u2019\ud835\udc4e\ud835\udc3f and \ud835\udc45\ud835\udc43 =  \ud835\udc43\u2019\ud835\udc4e\ud835\udc45, where  \n\ud835\udc43\u2019 is a common prefix and \ud835\udc4e\ud835\udc3f, \ud835\udc4e\ud835\udc45 are items. If the QDB con-\ntains a large number of transactions, the sets \ud835\udf0c(\ud835\udc3f\ud835\udc43) and \n\ud835\udf0c(\ud835\udc45\ud835\udc43) can be very large. Thus, calculating and storing the \nintersection \uf072(\ud835\udc36) = \uf072(\ud835\udc3f\ud835\udc43) \u2229 \ud835\udf0c(\ud835\udc45\ud835\udc43)  can consume much \ntime and memory. To address this problem, the concept of \ndiffset has been proposed in frequent itemset mining [21]. \nDefinition 7 (Diffset of an itemset [21]). The diffset of the item-\nset \ud835\udc36 is denoted as \ud835\udc51(\ud835\udc36) and defined as \ud835\udc51(\ud835\udc36) \u225d  \uf072(\ud835\udc3f\ud835\udc43) \\\n \uf072(\ud835\udc36), where \"\\\" is the set difference operator. It was shown \nthat if \ud835\udc36 is a 1-itemset, then: \n\ud835\udc51(\ud835\udc36) \u225d  \ud835\udc9f \\ \uf072(\ud835\udc36), \n \n \n(6) \nand for any k-itemset \ud835\udc36 with \ud835\udc58 \u2a7e  2, then \n\ud835\udc51(\ud835\udc36) =  \ud835\udc51(\ud835\udc45\ud835\udc43) \\ \ud835\udc51(\ud835\udc3f\ud835\udc43). \n \n   (7) \nBecause the diffset \ud835\udc51(\ud835\udc36) is always smaller than \ud835\udf0c(\ud835\udc3f\ud835\udc43) \nand \ud835\udc51(\ud835\udc45\ud835\udc43), it was shown that using \ud835\udc51(\ud835\udc36) with formulas \n(6)-(7) instead of \ud835\udf0c(\ud835\udc36) to calculate the support of an itemset \n\ud835\udc36  ( \ud835\udc60\ud835\udc62\ud835\udc5d\ud835\udc5d(\ud835\udc36) = \ud835\udc60\ud835\udc62\ud835\udc5d\ud835\udc5d(\ud835\udc3f\ud835\udc43) \u2212 |\ud835\udc51(\ud835\udc36)| , since \uf072(\ud835\udc36) = \uf072(\ud835\udc3f\ud835\udc43) \\\n \ud835\udc51(\ud835\udc36)) often allows to reduce memory usage and speed up \ncalculations in frequent itemset mining [21]. The next par-\nagraph explains how the concept of diffset is modified to \nbe used for calculating UBs. \nModified diffset technique for vertical UB calculations. \nBy definition, the vector \ud835\udcb1(\ud835\udc36) can be obtained using \n\uf072(\ud835\udc36). Based on formulas 6 and 7, this article proposes two \nrecursive formulas (Proposition 3) for quickly computing \nthe vector \ud835\udcb1(\ud835\udc36) of a child node \ud835\udc36  based on the vector \n\ud835\udcb1(\ud835\udc3f\ud835\udc43)  and the small diffset \ud835\udc51(\ud835\udc36) instead of \ud835\udf0c(\ud835\udc36). \nProposition 3 (Recursive formulas for fast calculating \ud835\udcb1(\ud835\udc36))  \nAssume that the itemset \ud835\udc36 is an item-extension of a given \nitemset \ud835\udc43. Thus, \ud835\udc5a\ud835\udc56\ud835\udc5b\ud835\udc3c\ud835\udc5b\ud835\udc51(\ud835\udc43) = \ud835\udc5a\ud835\udc56\ud835\udc5b\ud835\udc3c\ud835\udc5b\ud835\udc51(\ud835\udc36). Based on \ud835\udc51(\ud835\udc36) \nand \ud835\udcb1(\ud835\udc43), the value of \ud835\udcb1(\ud835\udc36) = {vj(C), \ud835\udc57 \u2a7e \ud835\udc5a\ud835\udc56\ud835\udc5b\ud835\udc3c\ud835\udc5b\ud835\udc51(\ud835\udc36)} is \ncomputed recursively as follows:  \n\ud835\udc63\ud835\udc57(\uf0c6) = \u2211\n\ud835\udc56: \ud835\udc5e\u2032\ud835\udc56\ud835\udc57 > 0 \ud835\udc5e\u2032\ud835\udc56\ud835\udc57\n = \ud835\udc62(\ud835\udc4e\ud835\udc57), \uf022\ud835\udc57 \u2a7e 1,   \n(8) \n\ud835\udc63\ud835\udc57(\ud835\udc36) = \ud835\udc63\ud835\udc57(\ud835\udc43) \u2212 \u2211\n\ud835\udc56: \ud835\udc61\ud835\udc56 \uf0ce \ud835\udc51(\ud835\udc36) \ud835\udc5e\u2032\ud835\udc56\ud835\udc57\n, \uf022\ud835\udc57 \u2a7e \ud835\udc5a\ud835\udc56\ud835\udc5b\ud835\udc3c\ud835\udc5b\ud835\udc51(\ud835\udc36). (9) \nIn particular, if \ud835\udc51(\ud835\udc36) = \uf0c6, then \ud835\udcb1(\ud835\udc36) = \ud835\udcb1(\ud835\udc43). \nProof. Since \ud835\udc36 is an extension of \ud835\udc43 with an item \ud835\udc4e\ud835\udc45, then \n\ud835\udc36 = \ud835\udc43\ud835\udc4e\ud835\udc45, and thus \ud835\udc5a\ud835\udc56\ud835\udc5b\ud835\udc3c\ud835\udc5b\ud835\udc51(\ud835\udc43) = \ud835\udc5a\ud835\udc56\ud835\udc5b\ud835\udc3c\ud835\udc5b\ud835\udc51(\ud835\udc36). For any \n\ud835\udc57  \u2a7e \ud835\udc5a\ud835\udc56\ud835\udc5b\ud835\udc3c\ud835\udc5b\ud835\udc51(\ud835\udc43) = \ud835\udc5a\ud835\udc56\ud835\udc5b\ud835\udc3c\ud835\udc5b\ud835\udc51(\ud835\udc36), then \uf072(\ud835\udc36) = \uf072(\ud835\udc43) \\ \ud835\udc51(\ud835\udc36), \n\uf072(\ud835\udc43)  contains \uf072(\ud835\udc36)  and \ud835\udc51(\ud835\udc36) . Thus, \ud835\udc63\ud835\udc57(\ud835\udc36)  \u225d \n\u2211\n\ud835\udc56: \ud835\udc61\ud835\udc56\uf0ce\uf072(\ud835\udc36) \ud835\udc5e\u2032\ud835\udc56\ud835\udc57\n = \u2211\n\ud835\udc56: \ud835\udc61\ud835\udc56\uf0ce\uf072(\ud835\udc43) \ud835\udc5e\u2032\ud835\udc56\ud835\udc57\n \u2212 \u2211\n\ud835\udc56: \ud835\udc61\ud835\udc56 \uf0ce \ud835\udc51(\ud835\udc36) \ud835\udc5e\u2032\ud835\udc56\ud835\udc57\n = \ud835\udc63\ud835\udc57(\ud835\udc43) \u2212 \n\u2211\n\ud835\udc56: \ud835\udc61\ud835\udc56 \uf0ce \ud835\udc51(\ud835\udc36) \ud835\udc5e\u2032\ud835\udc56\ud835\udc57\n.  \nIn particular, if \ud835\udc51(\ud835\udc36) = \uf0c6 , then \ud835\udc63\ud835\udc57(\ud835\udc36)  \u2261 \ud835\udc63\ud835\udc57(\ud835\udc43) , \uf022\ud835\udc57  \u2a7e \n\ud835\udc5a\ud835\udc56\ud835\udc5b\ud835\udc3c\ud835\udc5b\ud835\udc51(\ud835\udc43) = \ud835\udc5a\ud835\udc56\ud835\udc5b\ud835\udc3c\ud835\udc5b\ud835\udc51(\ud835\udc36), i.e. \ud835\udc49(\ud835\udc36) =  \ud835\udc49(\ud835\udc43). \n         \uf07f \nIn other words, \ud835\udcb1(\ud835\udc36) can be calculated directly from \n\ud835\udcb1(\ud835\udc43) and the rows {\ud835\udc5e\u2032\n\ud835\udc56\ud835\udc57 | \ud835\udc57 \u2a7e \ud835\udc5a\ud835\udc56\ud835\udc5b\ud835\udc3c\ud835\udc5b\ud835\udc51(\ud835\udc36)} with \ud835\udc61\ud835\udc56 \uf0ce \ud835\udc51(\ud835\udc36) in \nTable 4. Comparison of values and pruning effects of UBs. \nPruning \n Effect of \nUBs \n\ud835\udc4e\ud835\udc62\ud835\udc4f1 \n\u226a \n\ud835\udc4e\ud835\udc62\ud835\udc62\ud835\udc4f \n\ud835\udc4e\ud835\udc62\ud835\udc4f \n\u226a \n\ud835\udc5f\ud835\udc61\ud835\udc62\ud835\udc4f \n\ud835\udc56\ud835\udc4e\ud835\udc62\ud835\udc4f \n\u226a \n\ud835\udc4e\ud835\udc62\ud835\udc4f \n\ud835\udc59\ud835\udc4e\ud835\udc62\ud835\udc4f\n\u226a \n\ud835\udc59\ud835\udc62\ud835\udc4f \n\ud835\udc59\ud835\udc62\ud835\udc4f\ud835\udc4e\ud835\udc62 \n\ud835\udc61\ud835\udc62\ud835\udc4f\ud835\udc4e\ud835\udc62, \n\ud835\udc5a\ud835\udc4e\ud835\udc62 \n\ud835\udc9c\u2133 \n\uf0fc \n  \n \n \n \n \n\u212c\ud835\udc56\ud835\udc9f\u2130\ud835\udc9c\u2133 \uf0fc \n \uf0fc \n  \n \n \n \n\u2131\u2130\ud835\udc9c\u2133 \n\uf0fc \n \uf0fc \n \uf0fc \n  \n\uf0fc \n \n \n\ud835\udc9f\ud835\udcab\ud835\udc9e \n\uf0fc \n \uf0fc \n \uf0fc \n\uf0fc  \n\uf0fc  \n \uf0fc \n \n \n1041-4347 (c) 2018 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more\ninformation.\nThis article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI\n10.1109/TKDE.2018.2833478, IEEE Transactions on Knowledge and Data Engineering\nTIN TRUONG ET AL.:  EFFICIENT VERTICAL MINING OF HIGH AVERAGE-UTILITY ITEMSETS BASED ON NOVEL UPPER-BOUNDS \n9 \n \nthe matrix \ud835\udcac corresponding to the diffset \ud835\udc51(\ud835\udc36). Because \ndiffsets are generally small, using diffsets is expected to re-\nduce both runtime and memory consumption for compu-\nting \ud835\udcb1(\ud835\udc36). Finally, based only on \ud835\udcb1(\ud835\udc36), we can directly cal-\nculate the utility \ud835\udc62(\ud835\udc36), and all the proposed upper-bounds \n\ud835\udc4e\ud835\udc62\ud835\udc4f1(\ud835\udc36), \ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc36), \ud835\udc56\ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc36) and \ud835\udc59\ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc36), using formulas (1) \n- (5) and \ud835\udc4e\ud835\udc62(\ud835\udc36) = \ud835\udc62(\ud835\udc36) / |\ud835\udc36|. \nFor example, consider the itemset \ud835\udc36 = \ud835\udc4e\ud835\udc51, which is an \nextension of the prefix \ud835\udc3f\ud835\udc43 = \ud835\udc4e  obtained by combining \ud835\udc3f\ud835\udc43 \nwith an itemset \ud835\udc45\ud835\udc43 = \ud835\udc51 in the prefix tree. It is found that \n\ud835\udf0c(\ud835\udc3f\ud835\udc43) = 2456, \ud835\udc51(\ud835\udc3f\ud835\udc43) = 13, \ud835\udf0c(\ud835\udc45\ud835\udc43) = 12345, \ud835\udc51(\ud835\udc45\ud835\udc43) = 6, and \n\ud835\udc51(\ud835\udc36) = \ud835\udc51(\ud835\udc45\ud835\udc43) \\ \ud835\udc51(\ud835\udc3f\ud835\udc43) =  6. Thus \uf072(\ud835\udc36) = \uf072(\ud835\udc3f\ud835\udc43) \\ \ud835\udc51(\ud835\udc36) = \n245. Moreover, \ud835\udcb1(\ud835\udc4e) = {\ud835\udc63\ud835\udc57(\ud835\udc4e), \ud835\udc57 \u2a7e 1} = (90, 560, 70, 14, 16), \n\ud835\udc631(\ud835\udc4e\ud835\udc51) = \ud835\udc631(\ud835\udc4e) \u2013 \u2211\n\ud835\udc61\ud835\udc56 \uf0ce \ud835\udc51(\ud835\udc36) \ud835\udc5e\u2032\ud835\udc56\ud835\udc57\n = 90 \u2013 \ud835\udc5e\u203261 = 90 \u2013 18 = 72, and \nsimilarly \ud835\udcb1(\ud835\udc4e\ud835\udc51)  =  (72, 240, 70, 14, 10). Thus, \ud835\udc62(\ud835\udc4e\ud835\udc51) =\n\ud835\udc631(\ud835\udc4e\ud835\udc51) + \ud835\udc634(\ud835\udc4e\ud835\udc51) = 86, \ud835\udc62(\ud835\udc4e\ud835\udc51) = 43, \ud835\udc4e\ud835\udc62\ud835\udc4f1(\ud835\udc4e\ud835\udc51) = \ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc4e\ud835\udc51) = \n240, \ud835\udc56\ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc4e\ud835\udc51) = 72 and \ud835\udc59\ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc36) = 53. Now, consider an-\nother example. Let \ud835\udc36 = \ud835\udc4e\ud835\udc50\ud835\udc51 be the itemset obtained by join-\ning \ud835\udc3f\ud835\udc43 = \ud835\udc4e\ud835\udc50 and \ud835\udc45\ud835\udc43 = \ud835\udc4e\ud835\udc51 (or the extension of \ud835\udc4e\ud835\udc50 with \ud835\udc51). \nWe have that \ud835\udc51(\ud835\udc50) =  26, \ud835\udc51(\ud835\udc4e\ud835\udc50) = \ud835\udc51(\ud835\udc50) \\ \ud835\udc51(\ud835\udc4e) =  26, so \n\ud835\udc51(\ud835\udc4e\ud835\udc50) \u2287 \ud835\udc51(\ud835\udc4e\ud835\udc51)  and \ud835\udc51(\ud835\udc4e\ud835\udc50\ud835\udc51) = \ud835\udc51(\ud835\udc4e\ud835\udc51) \\ \ud835\udc51(\ud835\udc4e\ud835\udc50) = \uf0c6 . Thus, \n\ud835\udcb1(\ud835\udc4e\ud835\udc50\ud835\udc51) = \ud835\udcb1(\ud835\udc4e\ud835\udc50) = (66, 240, 70, 10, 7), \ud835\udc62(\ud835\udc4e\ud835\udc50\ud835\udc51) = 146, \ud835\udc62(\ud835\udc4e\ud835\udc50\ud835\udc51) \n= 146/3, \ud835\udc4e\ud835\udc62\ud835\udc4f1(\ud835\udc4e\ud835\udc50\ud835\udc51) = \ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc4e\ud835\udc50\ud835\udc51) = 240, \ud835\udc56\ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc4e\ud835\udc50\ud835\udc51) = 70 \nand \ud835\udc59\ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc36) = 167/3. It is observed that the cardinality of \n\ud835\udc51(\ud835\udc36)  is generally smaller than the one of \ud835\udf0c(\ud835\udc36) , e.g. \n|\ud835\udc51(\ud835\udc4e)| = 2 < |\ud835\udf0c(\ud835\udc4e)| = 4, |\ud835\udc51(\ud835\udc51)| = 1 < |\ud835\udf0c(\ud835\udc51)| = 5, |\ud835\udc51(\ud835\udc4e\ud835\udc51)| \n= 1 < |\ud835\udf0c(\ud835\udc4e\ud835\udc51)| = 3 and |\ud835\udc51(\ud835\udc4e\ud835\udc50\ud835\udc51)| = 0 < |\ud835\udf0c(\ud835\udc4e\ud835\udc50\ud835\udc51)| = 2. \n4 THE DHAUIM ALGORITHM \nBased on the novel \ud835\udc4e\ud835\udc62\ud835\udc4f1, \ud835\udc4e\ud835\udc62\ud835\udc4f, \ud835\udc56\ud835\udc4e\ud835\udc62\ud835\udc4f and \ud835\udc59\ud835\udc4e\ud835\udc62\ud835\udc4f UBs and the \nrecursive formulas of Proposition 3, this section presents \nan efficient algorithm, named dHAUIM (diffset-based \nHigh Average Utility Itemset Miner), for mining the set of \nall \nhigh \naverage-utility \nitemsets \n\ud835\udc3b\ud835\udc34\ud835\udc48\ud835\udc46\n \u225d \n{(\ud835\udc36, \ud835\udc4e\ud835\udc62(\ud835\udc36)) | \ud835\udc4e\ud835\udc62(\ud835\udc36) \u2a7e \ud835\udc5a\ud835\udc62}. The proposal of this algorithm \nanswers the third research question (\ud835\udc443). The pseudocode \nof the algorithm is shown in Fig. 2. During the mining pro-\ncess, HAU candidate itemsets are stored in a prefix-tree us-\ning a novel structure named IDUL (Itemset-Diffset-Util-\nityList). This structure contains the information of a node \n\ud835\udc36 of the form (\ud835\udc36, \ud835\udc51(\ud835\udc36), \ud835\udcb1(\ud835\udc36)). Recall that the notation [\ud835\udc43] \ndenotes the set of item-extensions of a parent node \ud835\udc43. \nThe dHAUIM algorithm (Fig. 2) takes as input a QDB \n\ud835\udc9f and the \ud835\udc5a\ud835\udc62 threshold. It first computes the integrated \nmatrix \ud835\udcac\ud835\udc5b\ud835\udc65\ud835\udc5a , (\uf072(\ud835\udc4e\ud835\udc57), \ud835\udc57 \uf0ce \ud835\udc3d) and the vectors (\ud835\udc51(\ud835\udc4e\ud835\udc57) \u225d \ud835\udc9f \\ \n\uf072(\ud835\udc4e\ud835\udc57), \ud835\udc57 \uf0ce \ud835\udc3d), \ud835\udc49(\uf0c6)  \u225d (\ud835\udc63\ud835\udc57(\uf0c6) = \ud835\udc62(\ud835\udc4e\ud835\udc57), \uf022\ud835\udc57 \u220a \ud835\udc3d) using formu-\nlas (6) and (8) (line 1). Then, the algorithm calculates the \nvectors \ud835\udcb1(\ud835\udc4e\ud835\udc57) \u225d (\ud835\udc63\ud835\udc58(\ud835\udc4e\ud835\udc57) = \ud835\udc63\ud835\udc58(\uf0c6) \u2212 \u2211\n\ud835\udc56: \ud835\udc61\ud835\udc56 \uf0ce \ud835\udc51(\ud835\udc4e\ud835\udc57) \ud835\udc5e\u2032\ud835\udc56\ud835\udc58\n, \ud835\udc58 \uf0ce \ud835\udc3d) \nusing formula (9) (line 2). Then, based on \ud835\udcb1(\ud835\udc4e\ud835\udc57) and by the \nformulas (2) - (5), the UBs \ud835\udc4e\ud835\udc62\ud835\udc4f1(\ud835\udc4e\ud835\udc57) \u225d \ud835\udc5a\ud835\udc4e\ud835\udc65{\ud835\udc63\ud835\udc58(\ud835\udc4e\ud835\udc57), \uf022\ud835\udc58 \u2a7e 1} \n(line 2) and \ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc4e\ud835\udc57) = \ud835\udc56\ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc4e\ud835\udc57) =  \ud835\udc5a\ud835\udc4e\ud835\udc65 {\ud835\udc63\ud835\udc58(\ud835\udc4e\ud835\udc57) | \ud835\udc58 \u2a7e  \ud835\udc57}, \n\ud835\udc59\ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc4e\ud835\udc57) \u225d \ud835\udc4e\ud835\udc62(\ud835\udc4e\ud835\udc57) + \ud835\udc5a\ud835\udc4e\ud835\udc65{\ud835\udc63\ud835\udc58(\ud835\udc4e\ud835\udc57) | \ud835\udc58 > \ud835\udc57}, \uf022\ud835\udc57 \uf0ce \ud835\udc3d. The set \n[\uf0c6] of all high\u2013\ud835\udc4e\ud835\udc62\ud835\udc4f1 items is then obtained by applying the \nstrong width pruning strategy SWP (line 3). Afterwards, the \nrecursive procedure HAU-Search( [\uf0c6], \ud835\udc3b\ud835\udc34\ud835\udc48\ud835\udc46 ) is called \n(line 5). In terms of implementation, to reduce memory us-\nage, the integrated QDB can be represented using well-\nknown techniques for storing sparse matrices. \nFor instance, consider the integrated matrix of Table 3. \nFor each item \ud835\udc4e\ud835\udc57 \uf0ce \ud835\udc9c, we calculate \uf072(\ud835\udc4e\ud835\udc57), \ud835\udc62(aj) to obtain \n\ud835\udcb1(\uf0c6) = (90, 1120, 320, 28, 31) as shown in Table 5. For ex-\nample, \uf072(\ud835\udc4f) = 1356, \ud835\udc632(\uf0c6) \u225d \ud835\udc62(\ud835\udc4e2 = \ud835\udc4f) = \ud835\udc5e\u203212  + \ud835\udc5e\u203232  + \n\ud835\udc5e\u203252  + \ud835\udc5e\u203262  = 160 + 400 + 240 + 320 = 1120. Based on \n\ud835\udcb1(\uf0c6) and formulas (6)-(9), (2)-(5), we can quickly calculate \nthe vectors \ud835\udcb1(\ud835\udc4e\ud835\udc57) and the UB values \ud835\udc4e\ud835\udc62\ud835\udc4f1(\ud835\udc4e\ud835\udc57), \ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc4e\ud835\udc57) = \n\ud835\udc56\ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc4e\ud835\udc57) , \ud835\udc59\ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc4e\ud835\udc57) , \u2200\ud835\udc57 \u220a \ud835\udc3d . For instance, \uf072(\ud835\udc4e) =  2456, \n\ud835\udc51(\ud835\udc4e) = \ud835\udc9f \\ \uf072(\ud835\udc4e) = 13. Hence, \ud835\udcb1(\ud835\udc4e) = (\ud835\udc63\ud835\udc58(\ud835\udc4e) = \ud835\udc63\ud835\udc58(\uf0c6) \u2212 \n\u2211\n\ud835\udc56 \uf0ce \ud835\udc51(\ud835\udc4e) = {1,3} \ud835\udc5e\u2032\ud835\udc56\ud835\udc58\n, \ud835\udc58 \u2a7e 1) = (90 \u2013 0 \u2013 0, 1120 \u2013 160 \u2013 400, 320 \n\u2013 100 \u2013 150, 28 \u2013 6 \u2013 8, 31 \u2013 5 \u2013 10) = (90, 560, 70, 14, 16), \n\ud835\udc4e\ud835\udc62(\ud835\udc4e) = \ud835\udc631(\ud835\udc4e) = 90 and \ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc4e) = \ud835\udc56\ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc4e) = \ud835\udc4e\ud835\udc62\ud835\udc4f1(\ud835\udc4e) = \n\ud835\udc5a\ud835\udc4e\ud835\udc65{\ud835\udc63\ud835\udc58(\ud835\udc4e) | \ud835\udc58 \u2a7e  1} = 560. \nFor a k-itemset where \ud835\udc58 \u2a7e 2, \ud835\udc36 = \ud835\udc4e\ud835\udc50, we have that \ud835\udc51(\ud835\udc36) \n= \ud835\udc51(\ud835\udc50) \\ \ud835\udc51(\ud835\udc4e) = 26, \ud835\udc631(\ud835\udc4e\ud835\udc50) = \ud835\udc631(\ud835\udc4e) \u2212 \ud835\udc5e\u203221 \u2212 \ud835\udc5e\u203261 = 90 \u2013 6 \u2013 \n18 = 66 and similarly, \ud835\udcb1(\ud835\udc4e\ud835\udc50) = (90 \u2013 6 \u2013 18, 560 - 320, 70, 14 \n\u2013 4, 16 \u2013 3 \u2013 6) = (66, 240, 70, 10, 7), so \ud835\udc4e\ud835\udc62(\ud835\udc4e\ud835\udc50) = (\ud835\udc631(\ud835\udc4e\ud835\udc50) + \n\ud835\udc633(\ud835\udc4e\ud835\udc50)) / 2 = 68, \ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc4e\ud835\udc50) = \ud835\udc4e\ud835\udc62\ud835\udc4f1(\ud835\udc4e\ud835\udc50) = \ud835\udc5a\ud835\udc4e\ud835\udc65{\ud835\udc63\ud835\udc58(\ud835\udc4e\ud835\udc50) | \ud835\udc58 \u2a7e\n \n \n \n \n \n \n \n \n \n \n \n \nFig. 2. The dHAUIM algorithm. \n \nFig. 3. The HAU-Search procedure. \n\ud835\udc3b\ud835\udc34\ud835\udc48\ud835\udc46 dHAUIM(\ud835\udc9f, \ud835\udc5a\ud835\udc62) \n-  Input: a QDB \ud835\udc9f, the minimum AU threshold \ud835\udc5a\ud835\udc62. \n- Output: the set of high-average utility itemsets \ud835\udc3b\ud835\udc34\ud835\udc48\ud835\udc46. \n1. Create the integrated matrix \ud835\udcac\ud835\udc5b\ud835\udc65\ud835\udc5a. \n2. Scan \ud835\udcac\ud835\udc5b\ud835\udc65\ud835\udc5a  once to calculate the vectors \ud835\udcb1(\uf0c6) and  \ud835\udcb1(\ud835\udc4e\ud835\udc57) \nfor each \ud835\udc4e\ud835\udc57 \uf0ce \ud835\udc9c;  \n3. [\uf0c6] = {(\ud835\udc4e\ud835\udc57, \ud835\udc51(\ud835\udc4e\ud835\udc57), \ud835\udcb1(\ud835\udc4e\ud835\udc57)) | \ud835\udc4e\ud835\udc57 \uf0ce \ud835\udc9c and \ud835\udc4e\ud835\udc62\ud835\udc4f1\n\u0305\u0305\u0305\u0305\u0305\u0305(\ud835\udc4e\ud835\udc57) \u2a7e \ud835\udc5a\ud835\udc62};  \n//strong width pruning \n4. \ud835\udc3b\ud835\udc34\ud835\udc48\ud835\udc46 = \uf0c6; \n5. HAU-Search([\uf0c6], \ud835\udc3b\ud835\udc34\ud835\udc48\ud835\udc46); \n6. return \ud835\udc3b\ud835\udc34\ud835\udc48\ud835\udc46; \n \nHAU-Search([\ud835\udc43], \ud835\udc3b\ud835\udc34\ud835\udc48\ud835\udc46) \n- Input: the set [\ud835\udc43] of all item-extensions of \ud835\udc43, the set \n\ud835\udc3b\ud835\udc34\ud835\udc48\ud835\udc46. \n- Output: the updated \ud835\udc3b\ud835\udc34\ud835\udc48\ud835\udc46 set. \n1. if ([\ud835\udc43] \u2260 \uf0c6) then { \n2.  for each (\ud835\udc36\ud835\udc56, \ud835\udc51(\ud835\udc36\ud835\udc56), \ud835\udcb1(\ud835\udc36\ud835\udc56)) in [\ud835\udc43] do { \n3. \n if (\ud835\udc56\ud835\udc4e\ud835\udc62\ud835\udc4f\n\u0305\u0305\u0305\u0305\u0305\u0305\u0305(\ud835\udc36\ud835\udc56) \u2a7e \ud835\udc5a\ud835\udc62 or \ud835\udc59\ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc36\ud835\udc56) \u2a7e \ud835\udc5a\ud835\udc62) then {  \n \n//depth pruning \n4.  \nif (\ud835\udc4e\ud835\udc62(\ud835\udc36\ud835\udc56) \u2a7e \ud835\udc5a\ud835\udc62)) then \n5.  \n \n\ud835\udc3b\ud835\udc34\ud835\udc48\ud835\udc46.Add(\ud835\udc36\ud835\udc56, \ud835\udc4e\ud835\udc62(\ud835\udc36\ud835\udc56)); \n6.   \nif (|[\ud835\udc43]| > 1) then { \n7.   \n \n[\ud835\udc36\ud835\udc56] =  \uf0c6; \n8.   \n  for each (\ud835\udc36\ud835\udc57, \ud835\udc51(\ud835\udc36\ud835\udc57), \ud835\udcb1(\ud835\udc36\ud835\udc57)) in [\ud835\udc43], with \ud835\udc57 > \ud835\udc56 do { \n9.  \n\ud835\udc38 = \ud835\udc36\ud835\udc56 \uf0c8 \ud835\udc36\ud835\udc57; \ud835\udc51(\ud835\udc38) = \ud835\udc51(\ud835\udc36\ud835\udc57) \\ \ud835\udc51(\ud835\udc36\ud835\udc56);  \n10. \n Calculate \ud835\udcb1(\ud835\udc38); \n11. \n if (\ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc38) \u2a7e \ud835\udc5a\ud835\udc62) then //width pruning \n12. \n  \n[\ud835\udc36\ud835\udc56] = [\ud835\udc36\ud835\udc56] \uf0c8 {(\ud835\udc38, \ud835\udc51(\ud835\udc38), \ud835\udcb1(\ud835\udc38)}; \n13. \n} \n14. \nHAU-Search([\ud835\udc36\ud835\udc56], \ud835\udc3b\ud835\udc34\ud835\udc48\ud835\udc46); \n15. \n } \n16. \n } \n17. } \n18. } \n19. return; \n \n1041-4347 (c) 2018 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more\ninformation.\nThis article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI\n10.1109/TKDE.2018.2833478, IEEE Transactions on Knowledge and Data Engineering\n10 \nIEEE TRANSACTIONS ON KNOWLEDGE AND DATA ENGINEERING,  MANUSCRIPT ID \n \n1} = 240, \ud835\udc56\ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc4e\ud835\udc50) = \ud835\udc5a\ud835\udc4e\ud835\udc65{\ud835\udc63\ud835\udc58(\ud835\udc4e\ud835\udc50) | \ud835\udc58 = 1, 3 or \ud835\udc58 > 3} = 70 \nand \ud835\udc59\ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc4e\ud835\udc50) = \ud835\udc4e\ud835\udc62(\ud835\udc4e\ud835\udc50) + \ud835\udc5a\ud835\udc4e\ud835\udc65{\ud835\udc63\ud835\udc58(\ud835\udc4e\ud835\udc50) | \ud835\udc58 > 3} = 78. Con-\nsider another itemset \ud835\udc4e\ud835\udc52. It is found that \ud835\udc51(\ud835\udc4e\ud835\udc52) = \ud835\udc51(\ud835\udc52) \\\n \ud835\udc51(\ud835\udc4e) = \u2205, and thus \ud835\udcb1(\ud835\udc4e\ud835\udc52) = \ud835\udcb1(\ud835\udc4e), so \ud835\udc4e\ud835\udc62(\ud835\udc4e\ud835\udc52) = (\ud835\udc631(\ud835\udc4e\ud835\udc52) + \n\ud835\udc635(\ud835\udc4e\ud835\udc52)) / 2 = 53, \ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc4e\ud835\udc52) = \ud835\udc4e\ud835\udc62\ud835\udc4f1(\ud835\udc4e\ud835\udc52) = 560, \ud835\udc56\ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc4e\ud835\udc52) = \n\ud835\udc5a\ud835\udc4e\ud835\udc65{\ud835\udc63\ud835\udc58(\ud835\udc4e\ud835\udc52) |  \ud835\udc58 = 1 , 5 or \ud835\udc58 > 5} =  90 and \ud835\udc59\ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc4e\ud835\udc52)  = \n\ud835\udc4e\ud835\udc62(\ud835\udc4e\ud835\udc52) + \ud835\udc5a\ud835\udc4e\ud835\udc65{\ud835\udc63\ud835\udc58(\ud835\udc4e\ud835\udc52) | \ud835\udc58 > 5} = 53. \nThe pseudocode of the HAU-Search procedure is \nshown in Fig. 3. It takes as input a set of item-extensions of \na prefix \ud835\udc43 and the current result set \ud835\udc3b\ud835\udc34\ud835\udc48\ud835\udc46. For each child \nnode \ud835\udc36\ud835\udc56 in [\ud835\udc43], the depth pruning strategy DP is applied by \nsimultaneously using two incomparable UBs \ud835\udc56\ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc36\ud835\udc56) and \n\ud835\udc59\ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc36\ud835\udc56). If \ud835\udc56\ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc36\ud835\udc56) < \ud835\udc5a\ud835\udc62  or \ud835\udc59\ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc36\ud835\udc56) < \ud835\udc5a\ud835\udc62 , then the \nwhole branch starting from \ud835\udc36\ud835\udc56 is removed from the IDUL \nprefix tree (line 3). Otherwise, if \ud835\udc4e\ud835\udc62(\ud835\udc36\ud835\udc56) \u2a7e \ud835\udc5a\ud835\udc62, then \ud835\udc36\ud835\udc56 is \nadded to the \ud835\udc3b\ud835\udc34\ud835\udc48\ud835\udc46 set (lines 4-5). Next, in lines 6-10, \ud835\udc36\ud835\udc56 is \njoined with each of its right siblings \ud835\udc36\ud835\udc57 in the prefix-tree to \ncreate an extension itemset \ud835\udc38, and the values \ud835\udc51(\ud835\udc38) and \n\ud835\udcb1(\ud835\udc38) are quickly calculated using formulas (7) and (9). For \nthe extension itemset \ud835\udc38, if \ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc38) <  \ud835\udc5a\ud835\udc62, then it is pruned \nby using the width pruning strategy WP without putting it \ninto the child class [\ud835\udc36\ud835\udc56]. Otherwise, \ud835\udc38 is added to [\ud835\udc36\ud835\udc56] (lines \n11-12). Afterwards, the HAU-Search procedure is recur-\nsively called for each child class [\ud835\udc36\ud835\udc56] (line 14). The HAU-\nSearch procedure is stopped if the [\ud835\udc43] set received as pa-\nrameter is empty (line 1). \nConsider the running example with \ud835\udc5a\ud835\udc62 = 250. Be-\ncause \ud835\udc4e\ud835\udc62\ud835\udc4f1(aj) > \ud835\udc5a\ud835\udc62, \u2200\ud835\udc57 \u220a \ud835\udc3d, the procedure receives [\uf0c6] = \n{(\ud835\udc4e, 13, (90, 560, 70, 14, 16)), (\ud835\udc4f, 24, (48, 1120, 270, 18, 27)), \n(\ud835\udc50, 26, (66, 800, 320, 24, 22)), (\ud835\udc51, 6, (72, 800, 320, 28, 25)), (\ud835\udc52, \n\uf0c6, (90, 1120, 320, 28, 31))} as parameter. The final result is \nthe set \ud835\udc3b\ud835\udc34\ud835\udc48\ud835\udc46 = {(\ud835\udc4e\ud835\udc4f, 304), (\ud835\udc4f, 1120), (\ud835\udc4f\ud835\udc50, 535), (\ud835\udc4f\ud835\udc51, 409), (\ud835\udc4f\ud835\udc52, \n573.5), (\ud835\udc4f\ud835\udc50\ud835\udc51, 1088/3), (\ud835\udc4f\ud835\udc50\ud835\udc52, 1091/3), (\ud835\udc4f\ud835\udc50\ud835\udc51\ud835\udc52, 1109/4), (\ud835\udc4f\ud835\udc51\ud835\udc52, \n839/3), (\ud835\udc50, 320)}. The IDUL tree representing the search \nspace is shown in Fig. 4. In this figure, for each node \ud835\udc34, for \nthe sake of brevity, the field \ud835\udcb1(\ud835\udc34) is omitted, while the val-\nues \ud835\udc51(\ud835\udc34), \ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc34), \ud835\udc59\ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc34), \ud835\udc56\ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc34) and \ud835\udc4e\ud835\udc62(\ud835\udc34) are repre-\nsented as: [\ud835\udc34]\ud835\udc56\ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc34),\ud835\udc4e\ud835\udc62(\ud835\udc34)\n\ud835\udc85(\ud835\udc68),\ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc34),\ud835\udc59\ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc34).  Note that the dHAUIM al-\ngorithm does not need to store the whole tree in memory. \nOnly the part of the IDUL tree required by the depth-first \nsearch is kept in memory at any given time. \nRemarks. In the proposed algorithm, one should not remove \nUBs or replace them with other UBs reviewed in this paper. \nIf a strong UB is removed or a weaker UB is replaced with a \nstronger one, then the number of HAUI candidates can in-\ncrease, and this will decrease dHAUIM\u2019s performance. Con-\nversely, if a strong UB is replaced with a weaker one, it may \nresult in missing some HAUIs in the result set \ud835\udc3b\ud835\udc34\ud835\udc48\ud835\udc46.  \n(i). For example, although the improved UB \ud835\udc56\ud835\udc4e\ud835\udc62\ud835\udc4f  is \ntighter than \ud835\udc4e\ud835\udc62\ud835\udc4f, both have different pruning effects (DP \nand WP). Thus, using the width pruning condition \u201cif \n(\ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc38) \u2a7e  \ud835\udc5a\ud835\udc62)\u201d at line 11 of the HAU-Search procedure \nis necessary. Indeed, for \uf06d = \ud835\udc5a\ud835\udc62 = 250, if the condition is \nremoved, two redundant itemsets \ud835\udc4e\ud835\udc50 and \ud835\udc4e\ud835\udc51 will be kept \nin [\ud835\udc4e]. As a result, two additional redundant candidates \n[\ud835\udc4e\ud835\udc4f\ud835\udc50]240<\uf06d,97\n6,240,102 and [\ud835\udc4e\ud835\udc4f\ud835\udc51]240<\uf06d,91\n6,240,97  will need to be considered \n(when joining \ud835\udc4e\ud835\udc4f with \ud835\udc4e\ud835\udc50 and \ud835\udc4e\ud835\udc51).  \n (ii). Similarly, if we replace the \ud835\udc56\ud835\udc4e\ud835\udc62\ud835\udc4f, \ud835\udc59\ud835\udc4e\ud835\udc62\ud835\udc4f UBs with the \nstronger \ud835\udc4e\ud835\udc62\ud835\udc4f in the depth pruning condition at line 3 of \nHAU-Search, the algorithm may consider much more un-\npromising candidate itemsets. In fact, for the IDUL tree in \nFig. 4 and \ud835\udc5a\ud835\udc62 = 200, the algorithm would have to consider \nten additional redundant candidates \ud835\udc34 \uf0ce {\ud835\udc4e\ud835\udc4f\ud835\udc50, \ud835\udc4e\ud835\udc4f\ud835\udc51, \ud835\udc4e\ud835\udc4f\ud835\udc50\ud835\udc51, \n\ud835\udc4e\ud835\udc4f\ud835\udc50\ud835\udc52, \ud835\udc4e\ud835\udc4f\ud835\udc50\ud835\udc51\ud835\udc52, \ud835\udc4e\ud835\udc4f\ud835\udc51\ud835\udc52, \ud835\udc4e\ud835\udc50\ud835\udc51, \ud835\udc4e\ud835\udc50\ud835\udc52, \ud835\udc4e\ud835\udc51\ud835\udc52, \ud835\udc4e\ud835\udc50\ud835\udc51\ud835\udc52} having average-\nutility values \ud835\udc4e\ud835\udc62(\ud835\udc34) that are less than \ud835\udc5a\ud835\udc62. On the contrary, \nif \ud835\udc56\ud835\udc4e\ud835\udc62\ud835\udc4f or \ud835\udc59\ud835\udc4e\ud835\udc62\ud835\udc4f are used at line 3, then \ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc34) \u2a7e \ud835\udc5a\ud835\udc62 > \n\ud835\udc56\ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc34), and these unpromising candidates are not consid-\nered. \n(iii). Since the \ud835\udc56\ud835\udc4e\ud835\udc62\ud835\udc4f  and \ud835\udc59\ud835\udc4e\ud835\udc62\ud835\udc4f  UBs do not satisfy the \n\u212c\ud835\udc56\ud835\udc9f\u2130\ud835\udc9c\u2133 property, we cannot replace the strong \ud835\udc4e\ud835\udc62\ud835\udc4f UB \nwith weaker \ud835\udc56\ud835\udc4e\ud835\udc62\ud835\udc4f or \ud835\udc59\ud835\udc4e\ud835\udc62\ud835\udc4f UBs in the width pruning condi-\ntion at line 11 of HAU-Search. Indeed, assume that we re-\nplace the condition \u201cif (\ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc38) \u2a7e \ud835\udc5a\ud835\udc62)\u201d with \u201cif (\ud835\udc56\ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc38) \u2a7e\n\ud835\udc5a\ud835\udc62 and / or \ud835\udc59\ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc38) \u2a7e \ud835\udc5a\ud835\udc62)\u201d (*) and that \ud835\udc5a\ud835\udc62 = 80. For the \ntwo nodes [\ud835\udc4e\ud835\udc4f]560,304\n24,560,324  and  [\ud835\udc4e\ud835\udc50]70<\ud835\udc5a\ud835\udc62,68\n26,240,78 , we have that \n\ud835\udc56\ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc4e\ud835\udc50) = 70 < \ud835\udc59\ud835\udc4e\ud835\udc62\ud835\udc4f(\ud835\udc4e\ud835\udc50) = 78 <  \ud835\udc5a\ud835\udc62 and the modified \ncondition (*) does not hold. Hence, \ud835\udc4e\ud835\udc50 will not be in [\ud835\udc4e] and \nthus the itemset \ud835\udc4e\ud835\udc4f\ud835\udc50 which is the union of \ud835\udc4e\ud835\udc4f and \ud835\udc4e\ud835\udc50 will \nbe missing in the result set \ud835\udc3b\ud835\udc34\ud835\udc48\ud835\udc46  (because \ud835\udc4e\ud835\udc62(\ud835\udc4e\ud835\udc4f\ud835\udc50) =\n290/3 > \ud835\udc5a\ud835\udc62). \n5 EXPERIMENTAL EVALUATION \nTo evaluate the proposed dHAUIM algorithm, exten-\nsive experiments were carried out on a computer equipped \nwith an Intel(R) Core(TM) i5-6200U 2.3 GHz CPU with 4 \nGB of memory, running Windows 8.1. The performance of \nthe proposed dHAUIM algorithm was compared with four \nstate-of-the-art algorithms for mining high average utility \nitemsets, namely HAUI-Miner [17], EHAUPM [18], D-\nFHAUM [19] and MHAI [20]. All algorithms are imple-\nmented using the C# programming language. \nIn the experiments, three real-life datasets, namely \nMushroom, Chess and Online_retail, and several synthetic \ndatasets are used, where Mushroom and Chess can be ob-\ntained from [22] and Online_retail is available at the UCI \nmachine learning repository (http://www.lsbu.ac.uk/). \nThe datasets Mushroom and Chess contain actual transac-\ntions with synthetic utility values while Online_retail con-\ntains real utility values and transactions occurring between \n2010 and 2011 for a UK-based and registered non-store \nonline retail. Synthetic datasets have been generated using \nthe IBM Quest data generator (obtained from [22]) with pa-\nrameters described in Table 6. Note that transactions in \nsynthetic databases contain items but no purchase quanti-\nties and utility values. Therefore, the simulation model de-\nscribed in [6] was used to generate these values. Character-\nistics of considered datasets are shown in Table 7. \nTable 5. The values \ud835\udf0c(\ud835\udc4e\ud835\udc57), \ud835\udc51(\ud835\udc4e\ud835\udc57) and \ud835\udc62(\ud835\udc4e\ud835\udc57) in \ud835\udcb1(\uf0c6). \nTID \\ Item \ud835\udc82\ud835\udc8b \na \nb \nc \nd \n e \n\uf072(\ud835\udc82\ud835\udc8b) \n2456 \n1356 \n1345 \n12345 123456 \nd(\ud835\udc82\ud835\udc8b) \n13 \n24 \n26 \n6 \n \uf0c6 \n\ud835\udce5(\uf0c6)  \n90 \n1120 \n320 \n28 \n31 \n \n1041-4347 (c) 2018 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more\ninformation.\nThis article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI\n10.1109/TKDE.2018.2833478, IEEE Transactions on Knowledge and Data Engineering\nTIN TRUONG ET AL.:  EFFICIENT VERTICAL MINING OF HIGH AVERAGE-UTILITY ITEMSETS BASED ON NOVEL UPPER-BOUNDS \n11 \n \n \nIn the experiments, the \ud835\udc5a\ud835\udc62 threshold is expressed as a \npercentage of \ud835\udc47\ud835\udc48 (the total utility of the dataset, see Defi-\nnition 2). \n5.1 Influence of the pruning strategies \nAs presented in Subsection 3.3, DP, WP and SWP are three \nnovel strategies used by the dHAUIM algorithm to prune \nthe search space efficiently. To evaluate their influence in \ndHAUIM, we considered two groups of strategies, depth \npruning strategy (DP) and width pruning strategies (WP \nand SWP), and compared the runtimes of dHAUIM for \nthree different cases: (1) dHAUIM with DP; (2) dHAUIM \nwith WP and SWP; (3) dHAUIM with all DP, WP and SWP \nstrategies (All). Fig. 5 shows the results for the real-life da-\ntaset Mushroom and the synthetic dataset T16I9N60D125K \nin terms of runtime. \nAs shown in this figure, for T16I9N60D125K, the prun-\ning effect of DP is better than that of WP&SWP for the mu \nvalues of 0.3 and 0.4% but worse for the values of 0.6 and \n0.7%. Meanwhile, on Mushroom, the runtimes of \nWP&SWP are always less than those of DP for all the tested \nmu values. This shows that although UB values of the strat-\negy group WP&SWP are often larger than those in DP and \nthe pruning conditions based on WP&SWP are less to be \nmet, but their pruning effect is stronger than DP. The rea-\nson is that the WP&SWP strategies prune both backward \nand forward extension branches while DP eliminates only \nthe forward extension branch. Note that when combining \nboth the strategy groups, the runtimes of dHAUIM are re-\nduced significantly, compared to using each of them sepa-\nrately. This demonstrates the importance of each of the \nnovel strategies proposed in the dHAUIM algorithm.       \n5.2 Influence of the mu parameter \nThe second experiment assesses the influence of the \ud835\udc5a\ud835\udc62 \nparameter on execution time and number of join opera-\ntions for the datasets in Table 7. In this experiment, we use \nthree real-life datasets. Mushroom and Chess have been \nused frequently to evaluate state-of-the-art algorithms and \nOnline_retail contains real utility values. Also, we used \nsynthetic datasets to vary characteristics such as the num-\nber of distinct items and the average length of transactions. \nIn addition, various ranges of mu values have been tested \non the datasets. These ranges either cover all the mu values \nwhich were employed to test the previous algorithms (on \nMushroom and Chess) or cause large changes in terms of \nnumber of high average-utility itemsets and join opera-\ntions (see Table 8 and Fig. 7). Note that, in Table 8, we only \nTable 6. Parameters of the IBM Quest Synthetic Data Generator. \nParameters. \nMeaning \nT \nAverage transaction length \nI \nAverage size of the maximal \npotentially frequent itemsets \nN \nNumber of distinct items \nD \nNumber of transactions (in \nthousands) in the dataset \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \nFig. 4 The IDUL tree for \uf06d \u225d mu = 250, where each node is denoted as [\ud835\udc68]\ud835\udc8a\ud835\udc82\ud835\udc96\ud835\udc83(\ud835\udc68),\ud835\udc82\ud835\udc96(\ud835\udc68)\n\ud835\udc85(\ud835\udc68),\ud835\udc82\ud835\udc96\ud835\udc83(\ud835\udc68),\ud835\udc8d\ud835\udc82\ud835\udc96\ud835\udc83(\ud835\udc68). \nTable 7. Characteristics of datasets. \nDataset \nNo. of  \ntrans. \n No. of \nitems \nAverage \ntrans. \nlength \nType of  \ndata \nMushroom \n8,124 \n 119 \n23 \nReal-life \nOnline_retail \n19,283 \n 3785 \n19.9 \nReal-life \nChess \n3,196 \n 76 \n37 \nReal-life \nT11I6N30D100K \n100,000 \n 30 \n11 \nSynthetic \nT15I9N100D100K \n100,000 \n 100 \n15 \nSynthetic \nT20I9N50D100K \n100,000 \n 50 \n20 \nSynthetic \n \n \n \n \n \n \n \n \n \n \nFig. 5 Runtimes of dHAUIM by using the pruning strategies \nTable 8. Number of high average-utility itemsets \nDataset \nmu (%)  \nOnline_retail \n#HAUIs \n0.18 \n122 \n0.2  \n101 \n0.22 \n82 \n0.25 \n55 \n0.3  \n31 \nT20I9N50D100K \n#HAUIs \n1.2 \n546 \n1.6 \n201 \n1.9  \n83 \n2.0  \n55 \n2.3 \n30 \n\u220e Eliminate a node based on \ud835\udc4e\ud835\udc62 \n\u229d  Prune a branch based on \ud835\udc59\ud835\udc4e\ud835\udc62\ud835\udc4f or \ud835\udc56\ud835\udc4e\ud835\udc62\ud835\udc4f \n\uf06c[\ud835\udc51]28,28\n6,\ud835\udfd0\ud835\udfd6<\uf06d,53 \n\uf0c6 \n\uf06c[\ud835\udc52]31,31\n\u2205,\ud835\udfd1\ud835\udfcf<\uf06d,31 \n[\ud835\udc50]320,320 \n26,320,344 \n\u229d [\ud835\udc50\ud835\udc51]320,172 \n\u2205,320,\ud835\udfcf\ud835\udfd7\ud835\udfd2<\uf06d \u229d [\ud835\udc50\ud835\udc52]320,171\n\u2205,320,\ud835\udfcf\ud835\udfd5\ud835\udfcf<\uf06d  \n[\ud835\udc4f]1120,1120\n24,1120,1390 \n[\ud835\udc4f\ud835\udc50]800,535 \n6,800,556 [\ud835\udc4f\ud835\udc51]800,409 \n6,800,430 [\ud835\udc4f\ud835\udc52]1120,573.5 \n\u2205,1120,573.5 \n[\ud835\udc4f\ud835\udc51\ud835\udc52]800,279.7\n\u2205,800,279.7 \n[\ud835\udc4f\ud835\udc50\ud835\udc52]800,363.7 \n\u2205,800,363.7 \n[\ud835\udc4f\ud835\udc50\ud835\udc51]800,362.7 \n\u2205,800,383.7 \n[\ud835\udc4f\ud835\udc50\ud835\udc51\ud835\udc52]800,277.25 \n\u2205,800,277.25 \n\u229d [\ud835\udc4e\ud835\udc52]90 ,53 \n\u2205,560,\ud835\udfd3\ud835\udfd1<\uf06d \n\uf06c[\ud835\udc4e\ud835\udc50]70,68 \n26,\ud835\udfd0\ud835\udfd2\ud835\udfce<\uf06d,78  \uf06c[\ud835\udc4e\ud835\udc51]72,43 \n6,\ud835\udfd0\ud835\udfd2\ud835\udfce<\uf06d ,53 \n\u229d [\ud835\udc4e\ud835\udc4f\ud835\udc52]560,206.7 \n\u2205,560,\ud835\udfd0\ud835\udfce\ud835\udfd4.\ud835\udfd5<\uf06d \n\u220e[\ud835\udc4e]560,\ud835\udfd7\ud835\udfce<\uf06d\n13,560,650  \n[\ud835\udc4e\ud835\udc4f]560,304 \n24,560,324 \n \uf06c Prune a branch based on \ud835\udc4e\ud835\udc62\ud835\udc4f  \n0\n50\n100\n150\n200\n0.3 0.36 0.4\n0.5 0.56\nRuntime (s)\nmu (%)\nMushroom\n0\n1\n2\n3\n0.3\n0.4\n0.6\n0.7\n1.2\nRuntime (s)\nx 103\nmu (%)\nT16I9N60D125K\n1041-4347 (c) 2018 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more\ninformation.\nThis article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI\n10.1109/TKDE.2018.2833478, IEEE Transactions on Knowledge and Data Engineering\n12 \nIEEE TRANSACTIONS ON KNOWLEDGE AND DATA ENGINEERING,  MANUSCRIPT ID \n \nintroduce the number of high average-utility itemsets on \nT20I9N50D100K and Online retail due to the space limita-\ntion.     \nRuntime. The runtime of the proposed dHAUIM algo-\nrithm is compared with those of EHAUPM, D-FHAUM, \nMHAI and HAUI-Miner for various \ud835\udc5a\ud835\udc62 values on both \nreal-life and synthetic datasets. Results are shown in Fig. 6. \nIn the figure, we find that the runtimes of the algorithms \ndecrease as mu is increased. The reason is that the numbers \nof HAUIs (#HAUIs) discovered and join operations per-\nformed naturally decrease as mu is increased (see Table 8 \nand Fig. 7).  \nIt can be observed that dHAUIM is in general one to \ntwo orders of magnitude faster than the remaining algo-\nrithms for all \ud835\udc5a\ud835\udc62 values, and especially for low \ud835\udc5a\ud835\udc62 values. \nFor example, on Chess for all considered \ud835\udc5a\ud835\udc62  values, \ndHAUIM is about 24 to 168 times, 2 to 43 times, 32 to 239 \ntimes and 5 to 37 times faster than EHAUPM, D-FHAUM, \nHAUI-Miner and MHAI, respectively. The reason for this \nis that, as discussed in Subsection 3.3, the three novel \ud835\udc59\ud835\udc4e\ud835\udc62\ud835\udc4f, \n\ud835\udc4e\ud835\udc62\ud835\udc4f and \ud835\udc4e\ud835\udc62\ud835\udc4f1 upper-bounds are respectively tighter than \n\ud835\udc59\ud835\udc62\ud835\udc4f, \ud835\udc5f\ud835\udc61\ud835\udc62\ud835\udc4f and \ud835\udc4e\ud835\udc62\ud835\udc62\ud835\udc4f, used by EHAUPM, D- FHAUM and \nHAUI-Miner. Upper-bounds greatly influence the perfor-\nmance of these algorithms. Besides, because \ud835\udc5f\ud835\udc61\ud835\udc62\ud835\udc4f relies on \nthe horizontal database form, the EHAUPM algorithm of-\nten spends much time to recalculate or update \ud835\udc5f\ud835\udc61\ud835\udc62\ud835\udc4f values \nwhen items are removed from projected databases. Con-\nversely, the dHAUIM algorithm computes \ud835\udc59\ud835\udc4e\ud835\udc62\ud835\udc4f using the \nvertical form. It thus only need to ignore columns in the \ndatabase corresponding to items removed from the pro-\njected database. In addition, as mentioned in Subsection \n3.3, although the \ud835\udc59\ud835\udc62\ud835\udc4f\ud835\udc4e\ud835\udc62 , \ud835\udc61\ud835\udc62\ud835\udc4f\ud835\udc4e\ud835\udc62  and \ud835\udc5a\ud835\udc4e\ud835\udc62  upper-bounds \n[19], [20] are incomparable with the three novel \ud835\udc4e\ud835\udc62\ud835\udc4f1, \ud835\udc4e\ud835\udc62\ud835\udc4f \nand \ud835\udc56\ud835\udc4e\ud835\udc62\ud835\udc4f upper-bounds, the amplitude of the values of \n\ud835\udc59\ud835\udc62\ud835\udc4f\ud835\udc4e\ud835\udc62 and \ud835\udc61\ud835\udc62\ud835\udc4f\ud835\udc4e\ud835\udc62 are quite large and \ud835\udc5a\ud835\udc4e\ud835\udc62 may not be an \nUB on \ud835\udc4e\ud835\udc62. Thus, candidate pruning strategies based on \n\ud835\udc59\ud835\udc62\ud835\udc4f\ud835\udc4e\ud835\udc62 and \ud835\udc61\ud835\udc62\ud835\udc4f\ud835\udc4e\ud835\udc62 are less stable in terms of efficiency and \neffectiveness. In general, the three proposed pruning strat-\negies based on the novel \ud835\udc56\ud835\udc4e\ud835\udc62\ud835\udc4f, \ud835\udc59\ud835\udc4e\ud835\udc62\ud835\udc4f, \ud835\udc4e\ud835\udc62\ud835\udc4f and \ud835\udc4e\ud835\udc62\ud835\udc4f1 upper-\nbounds allows the dHAUIM algorithm to prune a large \nnumber of unpromising candidates from the search space \nearly. Consequently, the number of join operations per-\nformed by dHAUIM is much less than those of the com-\npared algorithms (see Fig. 7), which leads to better perfor-\nmance in terms of runtime. \nNumber of join operations. The number of join operations \nperformed by the algorithms was also recorded for all da-\ntasets and various \ud835\udc5a\ud835\udc62 values. Results are shown in Fig. 7. \nAs it can be seen in this figure, the number of join opera-\ntions of dHAUIM is much less than that of the previous \nalgorithms MHAI, D-FHAUM, EHAUPM and HAUI-\nMiner. Thus, the search space of dHAUIM can be de-\ncreased dramatically. As a result, dHAUIM is also much \nfaster than the other algorithms (see Fig. 6). For example, \non T15I9N100D100K, when \ud835\udc5a\ud835\udc62 is increased from 0.42 to \n0.9%, the number of join operations performed by \ndHAUIM is 69.4 to 98.8% less than the previous state-of-\nthe-art algorithms.  \n5.3 In\ufb02uence of database parameters \nTo evaluate the influence of database characteristics on the \nproposed algorithm\u2019s efficiency, a third experiment was \nperformed where parameters of synthetic datasets (see Ta-\nble 6) were varied. \nIn the following, a parameter letter followed by the \nwildcard (*) symbol indicates that the parameter is varied \n   \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \nFig. 6. Runtime on real-life and synthetic datasets. \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n  \n \n \n \n \n \n \n \n \n \n \n \nFig. 7. Number of join operations on real-life and synthetic datasets.  \n1.E+0\n1.E+1\n1.E+2\n1.E+3\n1.E+4\n0.36 0.38 0.75 0.85\n0.9\nRuntime (s)\nmu (%)\nMushroom\n0\n1\n2\n3\n0.18\n0.2\n0.22 0.25\n0.3\nRuntime (s)\nx 103\nmu (%)\nOnline_retail\n1.E+0\n1.E+1\n1.E+2\n1.E+3\n1.E+4\n3\n3.3 3.6\n4\n5\n5.6\nRuntime (s)\nmu (%)\nChess\n1.E+0\n1.E+1\n1.E+2\n1.E+3\n1\n1.4\n1.7 1.76 2.2\nRuntime (s)\nmu (%)\nT11I6N30D100K\n0\n2\n4\n6\n8\n0.42\n0.46\n0.5\n0.6\n0.9\nRuntime (s)\nx 102\nmu (%)\nT15I9N100D100K\n1.E+0\n1.E+1\n1.E+2\n1.E+3\n1.E+4\n1.2\n1.6\n1.9\n2\n2.3\nRuntime (s)\nmu (%)\nT20I9N50D100K\n1.E+0\n1.E+2\n1.E+4\n1.E+6\n1.E+8\n0.36 0.38 0.75 0.85 0.9 1.5\n# of join operation\nmu (%)\nMushroom\n1.E+0\n1.E+2\n1.E+4\n1.E+6\n0.18 0.2 0.22 0.25 0.3\n# of join operation\nmu (%)\nOnline_retail\n1.E+0\n1.E+2\n1.E+4\n1.E+6\n1.E+8\n3\n3.3 3.6\n4\n5\n5.6\n# of join operation\nmu (%)\nChess\n0\n5\n10\n15\n20\n1\n1.4\n1.7\n1.76\n2.2\n# of join operation\nx 104\nmu (%)\nT11I6N30D100K\n0\n5\n10\n15\n20\n0.42\n0.46\n0.5\n0.6\n0.9\n# of join operation\nx 104\nmu (%)\nT15I9N100D100K\n1.E+0\n1.E+2\n1.E+4\n1.E+6\n1.2\n1.6\n1.9\n2\n2.3\n# of join operation\nmu (%)\nT20I9N50D100K\n1041-4347 (c) 2018 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more\ninformation.\nThis article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI\n10.1109/TKDE.2018.2833478, IEEE Transactions on Knowledge and Data Engineering\nTIN TRUONG ET AL.:  EFFICIENT VERTICAL MINING OF HIGH AVERAGE-UTILITY ITEMSETS BASED ON NOVEL UPPER-BOUNDS \n13 \n \nfor that dataset. The IBM Quest Synthetic Data generator \nwas used to generate synthetic datasets for various param-\neter values. Fig. 8 shows the runtimes and number of join \noperations of the compared algorithms, respectively. In \nFig. 8, it can be observed that when dataset parameters in-\ncrease, dHAUIM shows linear scalability in terms of \nruntime, while EHAUPM, D-FHAUM, MHAI and HAUI-\nMiner are less stable and show considerable runtime fluc-\ntuations. In this experiment, dHAUIM always outperforms \nthe other algorithms. For example, for the parameter N = \n100 on the T16I9N*D100K database and D = 125K on \nT16I9N60D*K, dHAUIM is one to two orders of magnitude \nfaster than EHAUPM, D-FHAUM, MHAI and HAUI-\nMiner. In terms of number of join operations,  Fig. 8 shows \nthat dHAUIM performs much less join operations than \ncompared algorithms, especially for large database param-\neter values. This explains the small runtimes of the \ndHAUIM algorithm for mining the set of all HAUIs. \nOverall, the above experiments have shown that the \nproposed dHAUIM algorithm largely outperforms previ-\nous state-of-the-art algorithms in terms of runtime and \nnumber of join operations on both real-life and synthetic \ndatasets, for various \ud835\udc5a\ud835\udc62 values. This shows that the pro-\nposed pruning strategies using the proposed upper-\nbounds are more effective than those of previous algo-\nrithms for mining all high average-utility itemsets. \n6. CONCLUSION AND FUTURE WORK \nBased on the idea of computing utility values using a ver-\ntical form in quantitative databases, this paper has pro-\nposed four tight UBs, called \ud835\udc4e\ud835\udc62\ud835\udc4f1, \ud835\udc4e\ud835\udc62\ud835\udc4f, \ud835\udc56\ud835\udc4e\ud835\udc62\ud835\udc4f and \ud835\udc59\ud835\udc4e\ud835\udc62\ud835\udc4f, a ge-\nneric framework to evaluate UBs in terms of their pruning \neffects, and three pruning strategies to eliminate unprom-\nising candidates early. A new IDUL tree structure was also \ndeveloped to quickly calculate the average utility and UBs \nof itemsets using a recursive process. A novel algorithm \nnamed dHAUIM has been further presented to efficiently \nmine high average-utility itemsets. An extensive experi-\nmental evaluation was carried out. Results have shown \nthat dHAUIM outperforms four state-of-the-art HAUI \nmining algorithms in terms of execution time and number \nof join operations on both real-life and synthetic databases. \nNote that, the proposed generic framework to evalu-\nate utility upper-bounds using anti-monotone-like crite-\nria and the corresponding pruning strategies proposed in \nthis study can be extended for the more general problem \nof mining all high utility sequences in quantitative se-\nquence databases. This will be considered for future \nwork. \nACKNOWLEDGMENT \nThis work was supported by Vietnam\u2019s National Foundation \nfor Science and Technology Development (NAFOSTED) un-\nder Grant Number 102.05-2017.300. \n"
}